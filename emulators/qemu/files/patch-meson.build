--- meson.build.orig	2024-06-10 14:35:25.000000000 -0400
+++ meson.build	2024-08-14 00:27:41.616235000 -0400
@@ -43,8 +43,8 @@
 genh = []
 qapi_trace_events = []
 
-bsd_oses = ['gnu/kfreebsd', 'freebsd', 'netbsd', 'openbsd', 'dragonfly', 'darwin']
-supported_oses = ['windows', 'freebsd', 'netbsd', 'openbsd', 'darwin', 'sunos', 'linux']
+bsd_oses = ['gnu/kfreebsd', 'freebsd', 'netbsd', 'openbsd', 'dragonfly', 'darwin', 'midnightbsd']
+supported_oses = ['windows', 'freebsd', 'netbsd', 'openbsd', 'darwin', 'sunos', 'linux', 'midnightbsd']
 supported_cpus = ['ppc', 'ppc64', 's390x', 'riscv32', 'riscv64', 'x86', 'x86_64',
   'arm', 'aarch64', 'loongarch64', 'mips', 'mips64', 'sparc64']
 
@@ -187,7 +187,7 @@
   .allowed()
 have_ga = get_option('guest_agent') \
   .disable_auto_if(not have_system and not have_tools) \
-  .require(host_os in ['sunos', 'linux', 'windows', 'freebsd', 'netbsd', 'openbsd'],
+  .require(host_os in ['sunos', 'linux', 'windows', 'freebsd', 'netbsd', 'openbsd', 'midnightbsd'],
            error_message: 'unsupported OS for QEMU guest agent') \
   .allowed()
 have_block = have_system or have_tools
@@ -2425,7 +2425,7 @@
 have_inotify_init = cc.has_header_symbol('sys/inotify.h', 'inotify_init')
 have_inotify_init1 = cc.has_header_symbol('sys/inotify.h', 'inotify_init1')
 inotify = not_found
-if (have_inotify_init or have_inotify_init1) and host_os == 'freebsd'
+if (have_inotify_init or have_inotify_init1) and (host_os == 'freebsd' or host_os == 'midnightbsd')
   # libinotify-kqueue
   inotify = cc.find_library('inotify')
   if have_inotify_init
@@ -4475,7 +4475,7 @@
 summary_info += {'FUSE lseek':        fuse_lseek.found()}
 summary_info += {'selinux':           selinux}
 summary_info += {'libdw':             libdw}
-if host_os == 'freebsd'
+if (host_os == 'freebsd' or host_os == 'midnightbsd')
   summary_info += {'libinotify-kqueue': inotify}
 endif
 summary(summary_info, bool_yn: true, section: 'Dependencies')
