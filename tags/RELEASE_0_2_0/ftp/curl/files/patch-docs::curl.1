diff -urN -urN -x .svn ../../vendor/curl/docs/curl.1 ./docs/curl.1
--- ../../vendor/curl/docs/curl.1	2008-03-24 00:40:11.000000000 +0200
+++ ./docs/curl.1	2008-03-29 16:08:15.000000000 +0200
@@ -34,7 +34,7 @@
 FILE).  The command is designed to work without user interaction.
 
 curl offers a busload of useful tricks like proxy support, user
-authentication, ftp upload, HTTP post, SSL connections, cookies, file transfer
+authentication, FTP upload, HTTP post, SSL connections, cookies, file transfer
 resume and more. As you will see below, the number of features will make your
 head spin!
 
@@ -42,7 +42,7 @@
 .BR libcurl (3)
 for details.
 .SH URL
-The URL syntax is protocol dependent. You'll find a detailed description in
+The URL syntax is protocol-dependent. You'll find a detailed description in
 RFC 3986.
 
 You can specify multiple URLs or parts of URLs by writing part sets within
@@ -64,7 +64,7 @@
 You can specify any amount of URLs on the command line. They will be fetched
 in a sequential manner in the specified order.
 
-Since curl 7.15.1 you can also specify step counter for the ranges, so that
+Since curl 7.15.1 you can also specify a step counter for the ranges, so that
 you can get every Nth number or letter:
 
  http://www.numericals.com/file[1-100:10].txt
@@ -81,10 +81,10 @@
 specified on a single command line and cannot be used between separate curl
 invokes.
 .SH "PROGRESS METER"
-curl normally displays a progress meter during operations, indicating amount
-of transferred data, transfer speeds and estimated time left etc.
+curl normally displays a progress meter during operations, indicating the amount
+of transferred data, transfer speeds and estimated time left, etc.
 
-However, since curl displays data to the terminal by default, if you invoke
+However, since curl displays this data to the terminal by default, if you invoke
 curl to do an operation and it is about to write data to the terminal, it
 \fIdisables\fP the progress meter as otherwise it would mess up the output
 mixing progress meter and response data.
@@ -93,7 +93,7 @@
 redirect the response output to a file, using shell redirect (>), -o [file] or
 similar.
 
-It is not the same case for FTP upload as that operation is not spitting out
+It is not the same case for FTP upload as that operation does not spit out
 any response data to the terminal.
 
 If you prefer a progress "bar" instead of the regular meter, \fI-#\fP is your
@@ -114,7 +114,7 @@
 used.
 .IP "--anyauth"
 (HTTP) Tells curl to figure out authentication method by itself, and use the
-most secure one the remote site claims it supports. This is done by first
+most secure one the remote site claims to support. This is done by first
 doing a request and checking the response-headers, thus possibly inducing an
 extra network round-trip. This is used instead of setting a specific
 authentication method, which you can do with \fI--basic\fP, \fI--digest\fP,
@@ -158,13 +158,13 @@
 (HTTP) Tells curl to use HTTP Basic authentication. This is the default and
 this option is usually pointless, unless you use it to override a previously
 set option that sets a different authentication method (such as \fI--ntlm\fP,
-\fI--digest\fP and \fI--negotiate\fP).
+\fI--digest\fP, or \fI--negotiate\fP).
 
 If this option is used several times, the following occurrences make no
 difference.
 .IP "--ciphers <list of ciphers>"
 (SSL) Specifies which ciphers to use in the connection. The list of ciphers
-must be using valid ciphers. Read up on SSL cipher list details on this URL:
+must specify valid ciphers. Read up on SSL cipher list details on this URL:
 \fIhttp://www.openssl.org/docs/apps/ciphers.html\fP
 
 NSS ciphers are done differently than OpenSSL and GnuTLS. The full list of
@@ -204,7 +204,7 @@
 Continue/Resume a previous file transfer at the given offset. The given offset
 is the exact number of bytes that will be skipped counted from the beginning
 of the source file before it is transferred to the destination.  If used with
-uploads, the ftp server command SIZE will not be used by curl.
+uploads, the FTP server command SIZE will not be used by curl.
 
 Use "-C -" to tell curl to automatically find out where/how to resume the
 transfer. It then uses the given output/input files to figure that out.
@@ -231,7 +231,7 @@
 \fI-F/--form\fP.
 
 \fI-d/--data\fP is the same as \fI--data-ascii\fP. To post data purely binary,
-you should instead use the \fI--data-binary\fP option. To URL encode the value
+you should instead use the \fI--data-binary\fP option. To URL-encode the value
 of a form field you may use \fI--data-urlencode\fP.
 
 If any of these options is used more than once on the same command line, the
@@ -241,7 +241,7 @@
 
 If you start the data with the letter @, the rest should be a file name to
 read the data from, or - if you want curl to read the data from stdin.  The
-contents of the file must already be url-encoded. Multiple files can also be
+contents of the file must already be URL-encoded. Multiple files can also be
 specified. Posting data from a file named 'foobar' would thus be done with
 \fI--data @foobar\fP.
 .IP "--data-binary <data>"
@@ -253,33 +253,33 @@
 are preserved and conversions are never done.
 
 If this option is used several times, the ones following the first will append
-data. As described in \fI-d/--data\fP.
+data as described in \fI-d/--data\fP.
 .IP "--data-urlencode <data>"
 (HTTP) This posts data, similar to the other --data options with the exception
-that this performs URL encoding. (Added in 7.18.0)
+that this performs URL-encoding. (Added in 7.18.0)
 
-To be CGI compliant, the <data> part should begin with a \fIname\fP followed
+To be CGI-compliant, the <data> part should begin with a \fIname\fP followed
 by a separator and a content specification. The <data> part can be passed to
 curl using one of the following syntaxes:
 .RS
 .IP "content"
-This will make curl URL encode the content and pass that on. Just be careful
+This will make curl URL-encode the content and pass that on. Just be careful
 so that the content doesn't contain any = or @ letters, as that will then make
 the syntax match one of the other cases below!
 .IP "=content"
-This will make curl URL encode the content and pass that on. The preceding =
+This will make curl URL-encode the content and pass that on. The preceding =
 letter is not included in the data.
 .IP "name=content"
-This will make curl URL encode the content part and pass that on. Note that
-the name part is expected to be URL encoded already.
+This will make curl URL-encode the content part and pass that on. Note that
+the name part is expected to be URL-encoded already.
 .IP "@filename"
 This will make curl load data from the given file (including any newlines),
-URL encode that data and pass it on in the POST.
+URL-encode that data and pass it on in the POST.
 .IP "name@filename"
 This will make curl load data from the given file (including any newlines),
-URL encode that data and pass it on in the POST. The name part gets an equal
+URL-encode that data and pass it on in the POST. The name part gets an equal
 sign appended, resulting in \fIname=urlencoded-file-content\fP. Note that the
-name is expected to be URL encoded already.
+name is expected to be URL-encoded already.
 .RE
 .IP "--digest"
 (HTTP) Enables HTTP Digest authentication. This is a authentication that
@@ -310,10 +310,10 @@
 
 This option is handy to use when you want to store the headers that a HTTP
 site sends to you. Cookies from the headers could then be read in a second
-curl invoke by using the \fI-b/--cookie\fP option! The \fI-c/--cookie-jar\fP
+curl invocation by using the \fI-b/--cookie\fP option! The \fI-c/--cookie-jar\fP
 option is however a better way to store cookies.
 
-When used on FTP, the ftp server response lines are considered being "headers"
+When used in FTP, the FTP server response lines are considered being "headers"
 and thus are saved there.
 
 If this option is used several times, the last one will be used.
@@ -365,7 +365,7 @@
 peer. The file may contain multiple CA certificates. The certificate(s) must
 be in PEM format.
 
-curl recognizes the environment variable named 'CURL_CA_BUNDLE' if that is
+curl recognizes the environment variable named 'CURL_CA_BUNDLE' if it is
 set, and uses the given path as a path to a CA cert bundle. This option
 overrides that variable.
 
@@ -391,7 +391,7 @@
 If this option is used several times, the last one will be used.
 .IP "-f/--fail"
 (HTTP) Fail silently (no output at all) on server errors. This is mostly done
-like this to better enable scripts etc to better deal with failed attempts. In
+to better enable scripts etc to better deal with failed attempts. In
 normal cases when a HTTP server fails to deliver a document, it returns an
 HTML document stating so (which often also describes why and more). This flag
 will prevent curl from outputting that and return error 22.
@@ -459,7 +459,7 @@
 
 If this option is used twice, the second will again disable this.
 .IP "--ftp-ssl-control"
-(FTP) Require SSL/TLS for the ftp login, clear for transfer.  Allows secure
+(FTP) Require SSL/TLS for the FTP login, clear for transfer.  Allows secure
 authentication, but non-encrypted data transfers for efficiency.  Fails the
 transfer if the server doesn't support SSL/TLS.  (Added in 7.16.0)
 
@@ -487,7 +487,7 @@
 waits for a reply from the server.
 (Added in 7.16.2)
 .IP "-F/--form <name=content>"
-(HTTP) This lets curl emulate a filled in form in which a user has pressed the
+(HTTP) This lets curl emulate a filled-in form in which a user has pressed the
 submit button. This causes curl to POST data using the Content-Type
 multipart/form-data according to RFC1867. This enables uploading of binary
 files etc. To force the 'content' part to be a file, prefix the file name
@@ -537,7 +537,7 @@
 When used, this option will make all data specified with \fI-d/--data\fP or
 \fI--data-binary\fP to be used in a HTTP GET request instead of the POST
 request that otherwise would be used. The data will be appended to the URL
-with a '?'  separator.
+with a '?' separator.
 
 If used in combination with -I, the POST data will instead be appended to the
 URL with a HEAD request.
@@ -556,9 +556,9 @@
 internal header by giving a replacement without content on the right side of
 the colon, as in: -H \&"Host:".
 
-curl will make sure that each header you add/replace get sent with the proper
-end of line marker, you should thus \fBnot\fP add that as a part of the header
-content: do not add newlines or carriage returns they will only mess things up
+curl will make sure that each header you add/replace is sent with the proper
+end-of-line marker, you should thus \fBnot\fP add that as a part of the header
+content: do not add newlines or carriage returns, they will only mess things up
 for you.
 
 See also the \fI-A/--user-agent\fP and \fI-e/--referer\fP options.
@@ -606,7 +606,7 @@
 (SSL) This option explicitly allows curl to perform "insecure" SSL connections
 and transfers. All SSL connections are attempted to be made secure by using
 the CA certificate bundle installed by default. This makes all connections
-considered "insecure" to fail unless \fI-k/--insecure\fP is used.
+considered "insecure" fail unless \fI-k/--insecure\fP is used.
 
 See this online resource for further details:
 \fBhttp://curl.haxx.se/docs/sslcerts.html\fP
@@ -627,16 +627,16 @@
 If this option is used several times, the last one will be used.
 .IP "--key-type <type>"
 (SSL) Private key file type. Specify which type your \fI--key\fP provided
-private key is. DER, PEM and ENG are supported. If not specified, PEM is
+private key is. DER, PEM, and ENG are supported. If not specified, PEM is
 assumed.
 
 If this option is used several times, the last one will be used.
 .IP "--krb <level>"
 (FTP) Enable Kerberos authentication and use. The level must be entered and
-should be one of 'clear', 'safe', 'confidential' or 'private'. Should you use
+should be one of 'clear', 'safe', 'confidential', or 'private'. Should you use
 a level that is not one of these, 'private' will instead be used.
 
-This option requires that the library was built with kerberos4 or GSSAPI
+This option requires a library built with kerberos4 or GSSAPI
 (GSS-Negotiate) support. This is not very common. Use \fI-V/--version\fP to
 see if your curl supports it.
 
@@ -646,11 +646,11 @@
 text file in which command line arguments can be written which then will be
 used as if they were written on the actual command line. Options and their
 parameters must be specified on the same config file line, separated by
-white space, colon, the equals sign or any combination thereof (however,
+whitespace, colon, the equals sign or any combination thereof (however,
 the preferred separator is the equals sign). If the parameter is to contain
-white spaces, the parameter must be enclosed within quotes. Within double
+whitespace, the parameter must be enclosed within quotes. Within double
 quotes, the following escape sequences are available: \\\\, \\", \\t, \\n,
-\\r and \\v. A backlash preceding any other letter is  ignored. If the
+\\r and \\v. A backslash preceding any other letter is ignored. If the
 first column of a config line is a '#' character, the rest of the line will be
 treated as a comment. Only write one option per physical line in the config
 file.
@@ -673,12 +673,12 @@
 
 1) curl tries to find the "home dir": It first checks for the CURL_HOME and
 then the HOME environment variables. Failing that, it uses getpwuid() on
-unix-like systems (which returns the home dir given the current user in your
+UNIX-like systems (which returns the home dir given the current user in your
 system). On Windows, it then checks for the APPDATA variable, or as a last
-resort the '%USERPROFILE%\Application Data'.
+resort the '%USERPROFILE%\\Application Data'.
 
 2) On windows, if there is no _curlrc file in the home dir, it checks for one
-in the same dir the executable curl is placed. On unix-like systems, it will
+in the same dir the curl executable is placed. On UNIX-like systems, it will
 simply try to load .curlrc from the determined home dir.
 
 .nf
@@ -699,7 +699,7 @@
 .IP "--libcurl <file>"
 Append this option to any ordinary curl command line, and you will get a
 libcurl-using source code written to the file that does the equivalent
-operation of what your command line operation does!
+of what your command-line operation does!
 
 NOTE: this does not properly support -F and the sending of multipart
 formposts, so in those cases the output program will be missing necessary
@@ -709,18 +709,18 @@
 used. (Added in 7.16.1)
 .IP "--limit-rate <speed>"
 Specify the maximum transfer rate you want curl to use. This feature is useful
-if you have a limited pipe and you'd like your transfer not use your entire
+if you have a limited pipe and you'd like your transfer not to use your entire
 bandwidth.
 
 The given speed is measured in bytes/second, unless a suffix is appended.
 Appending 'k' or 'K' will count the number as kilobytes, 'm' or M' makes it
-megabytes while 'g' or 'G' makes it gigabytes. Examples: 200K, 3m and 1G.
+megabytes, while 'g' or 'G' makes it gigabytes. Examples: 200K, 3m and 1G.
 
-The given rate is the average speed, counted during the entire transfer. It
+The given rate is the average speed counted during the entire transfer. It
 means that curl might use higher transfer speeds in short bursts, but over
 time it uses no more than the given rate.
 
-If you are also using the \fI-Y/--speed-limit\fP option, that option will take
+If you also use the \fI-Y/--speed-limit\fP option, that option will take
 precedence and might cripple the rate-limiting slightly, to help keeping the
 speed-limit logic working.
 
@@ -739,12 +739,12 @@
 If this option is used twice, the second will again disable list only.
 .IP "--local-port <num>[-num]"
 Set a preferred number or range of local port numbers to use for the
-connection(s).  Note that port numbers by nature is a scarce resource that
+connection(s).  Note that port numbers by nature are a scarce resource that
 will be busy at times so setting this range to something too narrow might
 cause unnecessary connection setup failures. (Added in 7.15.2)
 .IP "-L/--location"
 (HTTP/HTTPS) If the server reports that the requested page has moved to a
-different location (indicated with a Location: header and a 3XX response code)
+different location (indicated with a Location: header and a 3XX response code),
 this option will make curl redo the request on the new place. If used together
 with \fI-i/--include\fP or \fI-I/--head\fP, headers from all requested pages
 will be shown. When authentication is used, curl only sends its credentials to
@@ -772,7 +772,7 @@
 requested is larger than this value, the transfer will not start and curl will
 return with exit code 63.
 
-NOTE: The file size is not always known prior to download, and for such files
+\fBNOTE:\fP The file size is not always known prior to download, and for such files
 this option has no effect even if the file transfer ends up being larger than
 this given limit. This concerns both FTP and HTTP transfers.
 .IP "-m/--max-time <seconds>"
@@ -785,18 +785,18 @@
 Manual. Display the huge help text.
 .IP "-n/--netrc"
 Makes curl scan the \fI.netrc\fP file in the user's home directory for login
-name and password. This is typically used for ftp on unix. If used with http,
+name and password. This is typically used for FTP on unix. If used with HTTP,
 curl will enable user authentication. See
 .BR netrc(4)
 or
 .BR ftp(1)
 for details on the file format. Curl will not complain if that file
-hasn't the right permissions (it should not be world nor group
-readable). The environment variable "HOME" is used to find the home
+doesn't have the right permissions (it should not be either world- or
+group-readable). The environment variable "HOME" is used to find the home
 directory.
 
 A quick and very simple example of how to setup a \fI.netrc\fP to allow curl
-to ftp to the machine host.domain.com with user name \&'myself' and password
+to FTP to the machine host.domain.com with user name \&'myself' and password
 \&'secret' should look similar to:
 
 .B "machine host.domain.com login myself password secret"
@@ -804,7 +804,7 @@
 If this option is used twice, the second will again disable netrc usage.
 .IP "--netrc-optional"
 Very similar to \fI--netrc\fP, but this option makes the .netrc usage
-\fBoptional\fP and not mandatory as the \fI--netrc\fP does.
+\fBoptional\fP and not mandatory as the \fI--netrc\fP option does.
 .IP "--negotiate"
 (HTTP) Enables GSS-Negotiate authentication. The GSS-Negotiate method was
 designed by Microsoft and is used in their web applications. It is primarily
@@ -815,7 +815,7 @@
 If you want to enable Negotiate for your proxy authentication, then use
 \fI--proxy-negotiate\fP.
 
-This option requires that the library was built with GSSAPI support. This is
+This option requires a library built with GSSAPI support. This is
 not very common. Use \fI-V/--version\fP to see if your version supports
 GSS-Negotiate.
 
@@ -839,7 +839,7 @@
 If this option is used twice, the second will again enable keepalive.
 .IP "--no-sessionid"
 (SSL) Disable curl's use of SSL session-ID caching.  By default all transfers
-are done using the cache. Note that while nothing ever should get hurt by
+are done using the cache. Note that while nothing should ever get hurt by
 attempting to reuse SSL session-IDs, there seem to be broken SSL
 implementations in the wild that may require you to disable this in order for
 you to succeed. (Added in 7.16.0)
@@ -849,15 +849,15 @@
 .IP "--ntlm"
 (HTTP) Enables NTLM authentication. The NTLM authentication method was
 designed by Microsoft and is used by IIS web servers. It is a proprietary
-protocol, reversed engineered by clever people and implemented in curl based
+protocol, reverse-engineered by clever people and implemented in curl based
 on their efforts. This kind of behavior should not be endorsed, you should
 encourage everyone who uses NTLM to switch to a public and documented
-authentication method instead. Such as Digest.
+authentication method instead, such as Digest.
 
 If you want to enable NTLM for your proxy authentication, then use
 \fI--proxy-ntlm\fP.
 
-This option requires that the library was built with SSL support. Use
+This option requires a library built with SSL support. Use
 \fI-V/--version\fP to see if your curl supports NTLM.
 
 If this option is used several times, the following occurrences make no
@@ -874,7 +874,7 @@
 
   curl http://{site,host}.host[1-5].com -o "#1_#2"
 
-You may use this option as many times as you have number of URLs.
+You may use this option as many times as the number of URLs you have.
 
 See also the \fI--create-dirs\fP option to create the local directories
 dynamically.
@@ -885,16 +885,16 @@
 The remote file name to use for saving is extracted from the given URL,
 nothing else.
 
-You may use this option as many times as you have number of URLs.
+You may use this option as many times as the number of URLs you have.
 .IP "--pass <phrase>"
-(SSL/SSH) Pass phrase for the private key
+(SSL/SSH) Passphrase for the private key
 
 If this option is used several times, the last one will be used.
 .IP "--post301"
 Tells curl to respect RFC 2616/10.3.2 and not convert POST requests into GET
 requests when following a 301 redirection. The non-RFC behaviour is ubiquitous
 in web browsers, so curl does the conversion by default to maintain
-consistency. However, a server may requires a POST to remain a POST after such
+consistency. However, a server may require a POST to remain a POST after such
 a redirection. This option is meaningful only when using \fI-L/--location\fP
 (Added in 7.17.1)
 .IP "--proxy-anyauth"
@@ -942,18 +942,18 @@
 
 If this option is used several times, the last one will be used.
 .IP "-P/--ftp-port <address>"
-(FTP) Reverses the initiator/listener roles when connecting with ftp. This
-switch makes Curl use the PORT command instead of PASV. In practise, PORT
+(FTP) Reverses the initiator/listener roles when connecting with FTP. This
+switch makes Curl use the PORT command instead of PASV. In practice, PORT
 tells the server to connect to the client's specified address and port, while
-PASV asks the server for an ip address and port to connect to. <address>
+PASV asks the server for an IP address and port to connect to. <address>
 should be one of:
 .RS
 .IP interface
-i.e "eth0" to specify which interface's IP address you want to use  (Unix only)
+i.e "eth0" to specify which interface's IP address you want to use (Unix only)
 .IP "IP address"
-i.e "192.168.10.1" to specify exact IP number
+i.e "192.168.10.1" to specify the exact IP address
 .IP "host name"
-i.e "my.host.domain" to specify machine
+i.e "my.host.domain" to specify the machine
 .IP "-"
 make curl pick the same IP address that is already used for the control
 connection
@@ -968,11 +968,11 @@
 default config file search path.
 .IP "-Q/--quote <command>"
 (FTP/SFTP) Send an arbitrary command to the remote FTP or SFTP server. Quote
-commands are sent BEFORE the transfer is taking place (just after the
+commands are sent BEFORE the transfer takes place (just after the
 initial PWD command in an FTP transfer, to be exact). To make commands
 take place after a successful transfer, prefix them with a dash '-'.
-To make commands get sent after libcurl has changed working directory,
-just before the transfer command(s), prefix the command with '+' (this
+To make commands be sent after libcurl has changed the working directory,
+just before the transfer command(s), prefix the command with a '+' (this
 is only supported for FTP). You may specify any number of commands. If
 the server returns failure for one of the commands, the entire operation
 will be aborted. You must send syntactically correct FTP commands as
@@ -987,7 +987,7 @@
 See also the \fI--egd-file\fP option.
 .IP "-r/--range <range>"
 (HTTP/FTP/FILE) Retrieve a byte range (i.e a partial document) from a
-HTTP/1.1, FTP server or a local FILE. Ranges can be specified in a number of
+HTTP/1.1 or FTP server or a local FILE. Ranges can be specified in a number of
 ways.
 .RS
 .TP 10
@@ -1010,21 +1010,21 @@
 specifies 300 bytes from offset 500(H)
 .TP
 .B 100-199,500-599
-specifies two separate 100 bytes ranges(*)(H)
+specifies two separate 100-byte ranges(*)(H)
 .RE
 
 (*) = NOTE that this will cause the server to reply with a multipart
 response!
 
-Only digit characters (0-9) are valid in 'start' and 'stop' of range syntax
-\&'start-stop'. If a non-digit character is given in the range, the server's
-response will be indeterminable, depending on different server's configuration.
+Only digit characters (0-9) are valid in the 'start' and 'stop' fields of
+the \&'start-stop' range syntax. If a non-digit character is given in the range, the server's
+response will be unspecified, depending on the server's configuration.
 
 You should also be aware that many HTTP/1.1 servers do not have this feature
 enabled, so that when you attempt to get a range, you'll instead get the whole
 document.
 
-FTP range downloads only support the simple syntax 'start-stop' (optionally
+FTP range downloads only support the simple 'start-stop' syntax (optionally
 with one of the numbers omitted). It depends on the non-RFC command SIZE.
 
 If this option is used several times, the last one will be used.
@@ -1054,13 +1054,13 @@
 
 If this option is used multiple times, the last occurrence decide the amount.
 .IP "--retry-delay <seconds>"
-Make curl sleep this amount of time between each retry when a transfer has
+Make curl sleep this amount of time before each retry when a transfer has
 failed with a transient error (it changes the default backoff time algorithm
 between retries). This option is only interesting if \fI--retry\fP is also
 used. Setting this delay to zero will make curl use the default backoff time.
 (Added in 7.12.3)
 
-If this option is used multiple times, the last occurrence decide the amount.
+If this option is used multiple times, the last occurrence determines the amount.
 .IP "--retry-max-time <seconds>"
 The retry timer is reset before the first transfer attempt. Retries will be
 done as usual (see \fI--retry\fP) as long as the timer hasn't reached this
@@ -1069,14 +1069,14 @@
 period. To limit a single request\'s maximum time, use \fI-m/--max-time\fP.
 Set this option to zero to not timeout retries. (Added in 7.12.3)
 
-If this option is used multiple times, the last occurrence decide the amount.
+If this option is used multiple times, the last occurrence determines the amount.
 .IP "-s/--silent"
 Silent mode. Don't show progress meter or error messages.  Makes
 Curl mute.
 
 If this option is used twice, the second will again disable silent mode.
 .IP "-S/--show-error"
-When used with -s it makes curl show error message if it fails.
+When used with -s it makes curl show an error message if it fails.
 
 If this option is used twice, the second will again disable show error.
 .IP "--socks4 <host[:port]>"
@@ -1141,7 +1141,7 @@
 must use a trailing / on the last directory to really prove to Curl that there
 is no file name or curl will think that your last directory name is the remote
 file name to use. That will most likely cause the upload operation to fail. If
-this is used on a http(s) server, the PUT command will be used.
+this is used on a HTTP(S) server, the PUT command will be used.
 
 Use the file name "-" (a single dash) to use stdin instead of a given file.
 
@@ -1182,7 +1182,7 @@
 
 If this option is used several times, each occurrence will toggle it on/off.
 .IP "-u/--user <user:password>"
-Specify user and password to use for server authentication. Overrides
+Specify the user name and password to use for server authentication. Overrides
 \fI-n/--netrc\fP and \fI--netrc-optional\fP.
 
 If you just give the user name (without entering a colon) curl will prompt for
@@ -1194,7 +1194,7 @@
 
 If this option is used several times, the last one will be used.
 .IP "-U/--proxy-user <user:password>"
-Specify user and password to use for proxy authentication.
+Specify the user name and password to use for proxy authentication.
 
 If you use an SSPI-enabled curl binary and do NTLM authentication, you can
 force curl to pick up the user name and password from your environment by
@@ -1208,9 +1208,9 @@
 This option may be used any number of times. To control where this URL is
 written, use the \fI-o/--output\fP or the \fI-O/--remote-name\fP options.
 .IP "-v/--verbose"
-Makes the fetching more verbose/talkative. Mostly usable for debugging. Lines
+Makes the fetching more verbose/talkative. Mostly useful for debugging. A line
 starting with '>' means "header data" sent by curl, '<' means "header data"
-received by curl that is hidden in normal cases and lines starting with '*'
+received by curl that is hidden in normal cases, and a line starting with '*'
 means additional info provided by curl.
 
 Note that if you only want HTTP headers in the output, \fI-i/--include\fP
@@ -1237,7 +1237,7 @@
 .IP "IPv6"
 You can use IPv6 with this.
 .IP "krb4"
-Krb4 for ftp is supported.
+Krb4 for FTP is supported.
 .IP "SSL"
 HTTPS and FTPS are supported.
 .IP "libz"
@@ -1245,7 +1245,7 @@
 .IP "NTLM"
 NTLM authentication is supported.
 .IP "GSS-Negotiate"
-Negotiate authentication and krb5 for ftp is supported.
+Negotiate authentication and krb5 for FTP is supported.
 .IP "Debug"
 This curl uses a libcurl built with Debug. This enables more error-tracking
 and memory debugging etc. For curl-developers only!
@@ -1270,7 +1270,7 @@
 
 The variables present in the output format will be substituted by the value or
 text that curl thinks fit, as described below. All variables are specified
-like %{variable_name} and to output a normal % you just write them like
+as %{variable_name} and to output a normal % you just it them as
 %%. You can output a newline by using \\n, a carriage return with \\r and a tab
 space with \\t.
 
@@ -1278,11 +1278,11 @@
 The %-letter is a special letter in the win32-environment, where all
 occurrences of % must be doubled when using this option.
 
-Available variables are at this point:
+The variables available at this point are:
 .RS
 .TP 15
 .B url_effective
-The URL that was fetched last. This is mostly meaningful if you've told curl
+The URL that was fetched last. This is most meaningful if you've told curl
 to follow location: headers.
 .TP
 .B http_code
@@ -1305,20 +1305,20 @@
 host (or proxy) was completed.
 .TP
 .B time_pretransfer
-The time, in seconds, it took from the start until the file transfer is just
+The time, in seconds, it took from the start until the file transfer was just
 about to begin. This includes all pre-transfer commands and negotiations that
 are specific to the particular protocol(s) involved.
 .TP
 .B time_redirect
 The time, in seconds, it took for all redirection steps include name lookup,
-connect, pretransfer and transfer before final transaction was
+connect, pretransfer and transfer before the final transaction was
 started. time_redirect shows the complete execution time for multiple
 redirections. (Added in 7.12.3)
 .TP
 .B time_starttransfer
-The time, in seconds, it took from the start until the first byte is just about
+The time, in seconds, it took from the start until the first byte was just about
 to be transferred. This includes time_pretransfer and also the time the
-server needs to calculate the result.
+server needed to calculate the result.
 .TP
 .B size_download
 The total amount of bytes that were downloaded.
@@ -1354,10 +1354,10 @@
 
 If this option is used several times, the last one will be used.
 .IP "-x/--proxy <proxyhost[:port]>"
-Use specified HTTP proxy. If the port number is not specified, it is assumed
+Use the specified HTTP proxy. If the port number is not specified, it is assumed
 at port 1080.
 
-This option overrides existing environment variables that sets proxy to
+This option overrides existing environment variables that set the proxy to
 use. If there's an environment variable setting a proxy, you can set proxy to
 \&"" to override it.
 
@@ -1367,8 +1367,8 @@
 through the proxy, as done with the \fI-p/--proxytunnel\fP option.
 
 Starting with 7.14.1, the proxy host can be specified the exact same way as
-the proxy environment variables, include protocol prefix (http://) and
-embedded user + password.
+the proxy environment variables, including the protocol prefix (http://) and
+the embedded user + password.
 
 If this option is used several times, the last one will be used.
 .IP "-X/--request <command>"
@@ -1379,7 +1379,7 @@
 
 (FTP)
 Specifies a custom FTP command to use instead of LIST when doing file lists
-with ftp.
+with FTP.
 
 If this option is used several times, the last one will be used.
 .IP "-y/--speed-time <time>"
@@ -1421,7 +1421,7 @@
 internally preferred: HTTP 1.1.
 .IP "-1/--tlsv1"
 (SSL)
-Forces curl to use TSL version 1 when negotiating with a remote TLS server.
+Forces curl to use TLS version 1 when negotiating with a remote TLS server.
 .IP "-2/--sslv2"
 (SSL)
 Forces curl to use SSL version 2 when negotiating with a remote SSL server.
@@ -1430,11 +1430,11 @@
 Forces curl to use SSL version 3 when negotiating with a remote SSL server.
 .IP "-4/--ipv4"
 If libcurl is capable of resolving an address to multiple IP versions (which
-it is if it is ipv6-capable), this option tells libcurl to resolve names to
+it is if it is IPv6-capable), this option tells libcurl to resolve names to
 IPv4 addresses only.
 .IP "-6/--ipv6"
 If libcurl is capable of resolving an address to multiple IP versions (which
-it is if it is ipv6-capable), this option tells libcurl to resolve names to
+it is if it is IPv6-capable), this option tells libcurl to resolve names to
 IPv6 addresses only.
 .IP "-#/--progress-bar"
 Make curl display progress information as a progress bar instead of the
@@ -1448,13 +1448,13 @@
 
 .SH ENVIRONMENT
 .IP "http_proxy [protocol://]<host>[:port]"
-Sets proxy server to use for HTTP.
+Sets the proxy server to use for HTTP.
 .IP "HTTPS_PROXY [protocol://]<host>[:port]"
-Sets proxy server to use for HTTPS.
+Sets the proxy server to use for HTTPS.
 .IP "FTP_PROXY [protocol://]<host>[:port]"
-Sets proxy server to use for FTP.
+Sets the proxy server to use for FTP.
 .IP "ALL_PROXY [protocol://]<host>[:port]"
-Sets proxy server to use if no protocol-specific proxy is set.
+Sets the proxy server to use if no protocol-specific proxy is set.
 .IP "NO_PROXY <comma-separated list of hosts>"
 list of host names that shouldn't go through any proxy. If set to a asterisk
 \&'*' only, it matches all hosts.
@@ -1578,7 +1578,7 @@
 .IP 66
 Failed to initialise SSL Engine
 .IP 67
-User, password or similar was not accepted and curl failed to login
+The user name, password, or similar was not accepted and curl failed to log in
 .IP 68
 File not found on TFTP server
 .IP 69
@@ -1606,7 +1606,7 @@
 .IP 80
 Failed to shut down the SSL connection
 .IP XX
-There will appear more error codes here in future releases. The existing ones
+More error codes will appear here in future releases. The existing ones
 are meant to never change.
 .SH AUTHORS / CONTRIBUTORS
 Daniel Stenberg is the main author, but the whole list of contributors is
