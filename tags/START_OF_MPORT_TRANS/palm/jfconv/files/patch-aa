--- jconv.c.orig	Fri Nov 21 16:35:40 2003
+++ jconv.c	Fri Nov 21 16:35:40 2003
@@ -67,7 +67,7 @@
 	strcpy(infile, "");
 
 	delimChar = ',';	/* standard */
-	m_CommaDelim = 1;	/* standard */
+	m_CommandLineComma = 1;	/* standard */
 	m_UseInfoFile = 0;
 
 	while((o = getopt(argc, argv, "edvht:i:s")) != EOF) {
@@ -76,7 +76,7 @@
 				break;
 		case 'd':	encode = 'd';
 				break;
-		case 's':	m_CommaDelim = 0;
+		case 's':	m_CommandLineComma = 0;
 				break;
 		case 't':	strncpy(title, optarg, 32);
 				title[31] = 0;
@@ -176,7 +176,7 @@
 	FILE*		input;
 	FILE*		output;
 	FILE*		info;
-	tHeader		header;
+	tHeader		header = { 0 };
 	WORD		oddity = 0x008C;  
 	int 		numNonDeletedRecs;  	
 	JFileAppInfoType	appInfo;
@@ -185,7 +185,7 @@
 	int		curDumpLoc;
 	char*	 	tempPopupPtr; 
 	int		usesInfoFile;
-	int		fldLens[MAX_FIELDS];
+	int		fldLens[MAX_FIELDS] = { 0 };
 	unsigned char	holdChr[2];
 	char		endMsg[2048];
 	char		recNumStr[10];
@@ -437,7 +437,7 @@
 	int		i,j;
 	char		dbName[200];
 	int		usesInfoFile;
-	tHeader		header;
+	tHeader		header = { 0 };
 	char 		inputString[MAX_RECORD_LENGTH];  
 	int 		inputStringLoc, inputStringLen;  
 	JFileAppInfoType	appInfo;
@@ -747,7 +747,7 @@
 				if(inputStringLoc - dataLocs[currentField] > MAX_DATA_LENGTH)
 				{
 					sprintf(errorNum, "%d", currentRecord+1);
-					sprintf(errorStr, "Field data too long
+					sprintf(errorStr, "Field data too long\n\
  at record: %s", errorNum);
 					MessageBox2( errorStr, NULL, MB_OK );
 					fclose(input);
@@ -1165,10 +1165,6 @@
 	sprintf(recNumStr, "%d", currentRecord+1);
 	sprintf(endMsg, "Conversion of %s  records in %s to %s was successful!",
 			recNumStr, m_CSVPath, m_PDBPath);
-
-	if(!m_IsCommandLine)
-		MessageBox( endMsg, NULL, MB_OK );
-
 }
 
 int TypeIsString(int t)
@@ -1599,16 +1595,16 @@
 void showsynopsis()
 {
 	fprintf(stderr,
-"jconv [-e|-d] [-i <infofile>] [-t title] <infile> <outfile>
-
-        -e                encode: csv -> pdb
-        -d                decode: pdb -> csv
-	-s                use semicolon as delimiter
-	-i <infofile>     use <infofile> as infofile
-	-t title          title is the db-name
-        -v                print version information
-	-h                print this message
-
+"jconv [-e|-d] [-i <infofile>] [-t title] <infile> <outfile>\n\
+\n\
+        -e                encode: csv -> pdb\n\
+        -d                decode: pdb -> csv\n\
+	-s                use semicolon as delimiter\n\
+	-i <infofile>     use <infofile> as infofile\n\
+	-t title          title is the db-name\n\
+        -v                print version information\n\
+	-h                print this message\n\
+\n\
 ");
 	return;
 }
@@ -1625,13 +1621,13 @@
 
 void showversion()
 {
-	fprintf(stderr, "
-jconv: Converts JFile Pro database files to csv-files and vica versa
-Version 1.0
-copyright 1999 by Andreas Mock <AMock@osram.com>
-with permission of J. J. Lehett <JLehett@land-j.com>
-see also www.land-j.com
-
+	fprintf(stderr, "\n\
+jconv: Converts JFile Pro database files to csv-files and vica versa\n\
+Version 1.0\n\
+copyright 1999 by Andreas Mock <AMock@osram.com>\n\
+with permission of J. J. Lehett <JLehett@land-j.com>\n\
+see also www.land-j.com\n\
+\n\
 ");
 	return;
 }
