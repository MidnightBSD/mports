--- src/sna/sna_cpu.c.orig	2013-08-14 12:04:40.231041285 +0200
+++ src/sna/sna_cpu.c	2013-08-14 12:05:51.237030719 +0200
@@ -41,6 +41,7 @@
 {
 	unsigned max = __get_cpuid_max(BASIC_CPUID, NULL);
 	unsigned int eax, ebx, ecx, edx;
+	eax = ebx = ecx = edx = 0;
 	unsigned features = 0;
 	unsigned extra = 0;
 
--- src/sna/sna_damage.c.orig	2013-08-14 12:06:26.381036854 +0200
+++ src/sna/sna_damage.c	2013-08-14 12:07:23.684023065 +0200
@@ -410,7 +410,7 @@
 	int n, nboxes;
 	BoxPtr boxes, free_boxes = NULL;
 	pixman_region16_t *region = &damage->region;
-	struct sna_damage_box *iter;
+	struct sna_damage_box *iter = NULL;
 
 	assert(damage->mode != DAMAGE_ALL);
 	assert(damage->dirty);
@@ -1709,7 +1709,7 @@
 {
 	int n, nboxes;
 	BoxPtr boxes;
-	struct sna_damage_box *iter;
+	struct sna_damage_box *iter = NULL;
 
 	RegionCopy(r, &damage->region);
 	if (!damage->dirty)
--- src/uxa/intel_batchbuffer.c.orig	2013-08-14 12:08:14.323028320 +0200
+++ src/uxa/intel_batchbuffer.c	2013-08-14 12:08:37.202016923 +0200
@@ -141,7 +141,7 @@
 static void intel_batch_do_flush(ScrnInfoPtr scrn)
 {
 	intel_screen_private *intel = intel_get_screen_private(scrn);
-	struct intel_pixmap *priv;
+	struct intel_pixmap *priv = NULL;
 
 	list_for_each_entry(priv, &intel->batch_pixmaps, batch)
 		priv->dirty = 0;
--- src/uxa/intel_display.c.orig	2013-08-14 12:09:25.802015629 +0200
+++ src/uxa/intel_display.c	2013-08-14 12:09:51.034009844 +0200
@@ -1753,7 +1753,7 @@
 static drmModeEncoderPtr
 intel_get_kencoder(struct intel_mode *mode, int num)
 {
-	struct intel_output *iterator;
+	struct intel_output *iterator = NULL;
 	int id = mode->mode_res->encoders[num];
 
 	list_for_each_entry(iterator, &mode->outputs, link)
--- src/uxa/uxa-accel.c.orig	2013-08-14 12:02:11.898048975 +0200
+++ src/uxa/uxa-accel.c	2013-08-14 12:03:39.336042139 +0200
@@ -944,7 +944,7 @@
 
 	if (uxa_screen->info->flags & UXA_USE_GLAMOR) {
 		int ok = 0;
-		RegionPtr region;
+		RegionPtr region = NULL;
 
 		if (uxa_prepare_access(pDst, UXA_GLAMOR_ACCESS_RW)) {
 			if (uxa_prepare_access(pSrc, UXA_GLAMOR_ACCESS_RO)) {
