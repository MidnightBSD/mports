--- configure.in.orig	2016-04-24 13:44:40.000000000 -0400
+++ configure.in	2016-08-19 18:09:56.645691907 -0400
@@ -621,7 +621,7 @@
 [AC_CACHE_CHECK(whether dtrace USDT is available, rb_cv_dtrace_available,
 [
     echo "provider conftest{ probe fire(); };" > conftest_provider.d
-    if $DTRACE -h -o conftest_provider.h -s conftest_provider.d >/dev/null 2>/dev/null; then
+    if $DTRACE -xnolibs -h -o conftest_provider.h -s conftest_provider.d >/dev/null 2>/dev/null; then
       AC_TRY_COMPILE([@%:@include "conftest_provider.h"], [CONFTEST_FIRE();], [
 	# DTrace is available on the system
 	rb_cv_dtrace_available=yes
@@ -645,13 +645,13 @@
       probe fire();
     };
 _PROBES
-    $DTRACE -h -o conftest_provider.h -s conftest_provider.d >/dev/null 2>/dev/null &&
+    $DTRACE -xnolibs -h -o conftest_provider.h -s conftest_provider.d >/dev/null 2>/dev/null &&
     :
   }; then
     AC_TRY_COMPILE([@%:@include "conftest_provider.h"], [CONFTEST_FIRE();], [
 	if {
 	    cp -p conftest.${ac_objext} conftest.${ac_objext}.save &&
-	    $DTRACE -G -s conftest_provider.d conftest.${ac_objext} 2>/dev/null &&
+	    $DTRACE -xnolibs -G -s conftest_provider.d conftest.${ac_objext} 2>/dev/null &&
 	    :
 	}; then
 	    if cmp -s conftest.o conftest.${ac_objext}.save; then
@@ -981,7 +981,7 @@
 ])
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[freebsd*], [
   AC_CACHE_CHECK([whether pthread should be enabled by default],
     rb_cv_enable_pthread_default,
     [AC_TRY_CPP([
@@ -1201,7 +1201,7 @@
 		AC_DEFINE(BROKEN_SETREUID, 1)
 		AC_DEFINE(BROKEN_SETREGID, 1)
                 ac_cv_sizeof_rlim_t=8],
-[freebsd*], [	LIBS="-lm $LIBS"
+[midnightbsd*|freebsd*], [	LIBS="-lm $LIBS"
 		ac_cv_func_getpeername=no
 		ac_cv_func_getsockname=no
 		ac_cv_func_shutdown=no
@@ -1227,10 +1227,10 @@
   ],
 [	LIBS="-lm $LIBS"])
 
-AC_CHECK_LIB(crypt, crypt)      # glibc (GNU/Linux, GNU/Hurd, GNU/kFreeBSD)
-AC_CHECK_LIB(dl, dlopen)	# Dynamic linking for SunOS/Solaris and SYSV
-AC_CHECK_LIB(dld, shl_load)	# Dynamic linking for HP-UX
-AC_CHECK_LIB(socket, shutdown)  # SunOS/Solaris
+AC_SEARCH_LIBS(crypt, crypt)      # glibc (GNU/Linux, GNU/Hurd, GNU/kFreeBSD)
+AC_SEARCH_LIBS(dlopen, dl)	# Dynamic linking for SunOS/Solaris and SYSV
+AC_SEARCH_LIBS(shl_load, dld)	# Dynamic linking for HP-UX
+AC_SEARCH_LIBS(shutdown, socket)  # SunOS/Solaris
 
 dnl Checks for header files.
 AC_HEADER_DIRENT
@@ -2126,7 +2126,7 @@
 	rb_cv_broken_glibc_ia64_erfc=no)])
 AS_CASE([$rb_cv_broken_glibc_ia64_erfc],[yes],[ac_cv_func_erf=no])
 
-AS_CASE(["$target_os"],[freebsd*],[
+AS_CASE(["$target_os"],[midnightbsd*|freebsd*],[
 	 AC_DEFINE(BROKEN_CLOSE)
 	 AC_REPLACE_FUNCS(close)
 	 ])
@@ -2480,7 +2480,7 @@
 if test x"$ac_cv_func_clock_gettime" != xyes; then
     # glibc 2.17 moves clock_* functions from librt to the main C library.
     # http://sourceware.org/ml/libc-announce/2012/msg00001.html
-    AC_CHECK_LIB(rt, clock_gettime)
+    AC_SEARCH_LIBS(clock_gettime, rt)
     if test x"$ac_cv_lib_rt_clock_gettime" = xyes; then
 	AC_DEFINE(HAVE_CLOCK_GETTIME, 1)
     fi
@@ -2887,7 +2887,7 @@
 fi
 
 if test x"$enable_pthread" = xyes; then
-    for pthread_lib in thr pthread pthreads c c_r root; do
+    for pthread_lib in pthread thr pthreads c c_r root; do
 	AC_CHECK_LIB($pthread_lib, pthread_kill,
 		     rb_with_pthread=yes, rb_with_pthread=no)
 	if test "$rb_with_pthread" = "yes"; then break; fi
@@ -2901,6 +2901,7 @@
 	[c],    [],
 	[root], [],
 	[c_r],  [MAINLIBS="-pthread $MAINLIBS"],
+	[pthread],  [MAINLIBS="-pthread $MAINLIBS"],
 	        [AS_CASE(["$target_os"],
 		    [openbsd*|mirbsd*], [LIBS="-pthread $LIBS"],
 		    [LIBS="-l$pthread_lib $LIBS"])])
@@ -3209,11 +3210,10 @@
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
 			LIBPATHFLAG=" -L%1\$-s"
 			rb_cv_dlopen=yes],
-	[freebsd*|dragonfly*], [
+	[midnightbsd*|freebsd*|dragonfly*], [
 			: ${LDSHARED='$(CC) -shared'}
 			if test "$rb_cv_binary_elf" = yes; then
 			    LDFLAGS="$LDFLAGS -rdynamic"
-			    DLDFLAGS="$DLDFLAGS "'-Wl,-soname,$@'
 			else
 			  test "$GCC" = yes && test "$rb_cv_prog_gnu_ld" = yes || LDSHARED='$(LD) -Bshareable'
 			fi
@@ -3330,7 +3330,7 @@
 fi
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[midnightbsd*|freebsd*], [
     AC_CHECK_LIB([procstat], [procstat_open_sysctl])
     if test "x$ac_cv_lib_procstat_procstat_open_sysctl" = xyes; then
 	AC_CHECK_FUNCS(procstat_getvmmap)
@@ -3343,7 +3343,7 @@
 	AC_CHECK_LIB([execinfo], [backtrace])
 	AC_CHECK_HEADERS([libunwind.h])
     fi],
-[*-freebsd*|x86_64-netbsd*], [
+[*-midnightbsd*|*-freebsd*|x86_64-netbsd*], [
     AC_CHECK_HEADERS([execinfo.h])
     if test "x$ac_cv_header_execinfo_h" = xyes; then
 	AC_CHECK_LIB([execinfo], [backtrace])
@@ -3671,7 +3671,7 @@
   libdir_basename="${libdir_basename}"${multiarch+'/${arch}'}
 
   AS_CASE(["$target_os"],
-    [freebsd*|dragonfly*], [],
+    [midnightbsd*|freebsd*|dragonfly*], [],
     [
      if test "$GCC" = yes; then
        RUBY_TRY_LDFLAGS([${linker_flag}--no-undefined], [no_undefined=yes], [no_undefined=no])
@@ -3694,9 +3694,10 @@
 	    LIBRUBY_RELATIVE=yes
 	fi
 	],
-    [freebsd*|dragonfly*], [
+    [midnightbsd*|freebsd*|dragonfly*], [
 	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR)'
+	LIBRUBY_DLDFLAGS='-Wl,-soname,$(LIBRUBY_SO)'
 	if test "$rb_cv_binary_elf" != "yes" ; then
 	    LIBRUBY_SO="$LIBRUBY_SO.\$(TEENY)"
 	    LIBRUBY_ALIASES=''
@@ -3864,7 +3865,7 @@
             DTRACE_REBUILD=yes
             LIBRUBY_A_OBJS='$(DTRACE_GLOMMED_OBJ)'
         fi
-        AS_CASE("${target_os}", [freebsd*], [
+        AS_CASE("${target_os}", [midnightbsd*|freebsd*], [
             # FreeBSD's dtrace requires libelf
             LIBS="-lelf $LIBS"
         ])
