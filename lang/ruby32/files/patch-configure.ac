--- configure.ac.orig	2024-07-26 07:54:27.000000000 -0400
+++ configure.ac	2024-10-22 10:43:43.796003000 -0400
@@ -1226,7 +1226,7 @@
 		AC_DEFINE(BROKEN_SETREUID, 1)
 		AC_DEFINE(BROKEN_SETREGID, 1)
                 ac_cv_sizeof_rlim_t=8],
-[freebsd*], [	LIBS="-lm $LIBS"
+[freebsd*|midnightbsd*], [	LIBS="-lm $LIBS"
 		ac_cv_func_getpeername=no
 		ac_cv_func_getsockname=no
 		ac_cv_func_shutdown=no
@@ -1351,7 +1351,7 @@
 AC_CHECK_HEADERS(utime.h)
 AC_CHECK_HEADERS(stdatomic.h)
 
-AS_CASE("$target_cpu", [x64|x86_64|i[3-6]86*], [
+AS_CASE("$target_cpu", [amd64|x64|x86_64|i[3-6]86*], [
   AC_CHECK_HEADERS(x86intrin.h)
 ])
 RUBY_UNIVERSAL_CHECK_HEADER([x86_64, i386], x86intrin.h)
@@ -1956,7 +1956,7 @@
 ])
 AC_FUNC_MEMCMP
 
-AS_CASE(["$target_os"],[freebsd*],[
+AS_CASE(["$target_os"],[midnightbsd*|freebsd*],[
 	 AC_DEFINE(BROKEN_CLOSE)
 	 AC_REPLACE_FUNCS(close)
 	 ])
@@ -2642,6 +2642,12 @@
         [i386-freebsd*], [
             coroutine_type=x86
         ],
+        [x86_64-midnightbsd*], [
+            coroutine_type=amd64
+        ],
+        [i386-midnightbsd*], [
+            coroutine_type=x86
+        ],
         [aarch64-freebsd*], [
             coroutine_type=arm64
         ],
@@ -3046,11 +3052,11 @@
 	[interix*], [	: ${LDSHARED='$(CC) -shared'}
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
 			rb_cv_dlopen=yes],
-	[freebsd*|dragonfly*], [
+	[midnightbsd*|freebsd*|dragonfly*], [
 			: ${LDSHARED='$(CC) -shared'}
 			AS_IF([test "$rb_cv_binary_elf" = yes], [
 			    LDFLAGS="$LDFLAGS -rdynamic"
-			    DLDFLAGS="$DLDFLAGS "'-Wl,-soname,$@'
+			    DLDFLAGS="$DLDFLAGS "'-Wl,-E'
 			], [
 			  test "$GCC" = yes && test "$rb_cv_prog_gnu_ld" = yes || LDSHARED='$(LD) -Bshareable'
 			])
@@ -3157,7 +3163,7 @@
 AC_SUBST(TRY_LINK)
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[midnightbsd*|freebsd*], [
     AC_CHECK_LIB([procstat], [procstat_open_sysctl])
     AS_IF([test "x$ac_cv_lib_procstat_procstat_open_sysctl" = xyes], [
 	AC_CHECK_FUNCS(procstat_getvmmap)
@@ -3180,7 +3186,7 @@
         AC_DEFINE([HAVE_MACH_TASK_EXCEPTION_PORTS], [1])
     ])
     ])],
-[*-freebsd*|x86_64-netbsd*], [
+[*-midnightbsd*|*-freebsd*|x86_64-netbsd*], [
     AC_CHECK_HEADERS([execinfo.h])
     AS_IF([test "x$ac_cv_header_execinfo_h" = xyes], [
 	AC_CHECK_LIB([execinfo], [backtrace])
@@ -3486,7 +3492,7 @@
   ])
 
   AS_CASE(["$target_os"],
-    [freebsd*|dragonfly*], [],
+    [midnightbsd*|freebsd*|dragonfly*], [],
     [
      AS_IF([test "$GCC" = yes], [
        RUBY_TRY_LDFLAGS([${linker_flag}--no-undefined], [no_undefined=yes], [no_undefined=no])
@@ -3509,9 +3515,10 @@
 	    LIBRUBY_RELATIVE=yes
 	])
 	],
-    [freebsd*|dragonfly*], [
+    [midnightbsd*|freebsd*|dragonfly*], [
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
 	LIBRUBY_SONAME='$(LIBRUBY_SO)'
+	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ['-Wl,-soname,${LIBRUBY_SO}'])
 	AS_IF([test "$rb_cv_binary_elf" != "yes" ], [
 	    LIBRUBY_SO="$LIBRUBY_SO.\$(TEENY)"
 	    LIBRUBY_ALIASES=''
@@ -3650,7 +3657,7 @@
 ], [
     rb_cv_dtrace_available=no
 ])
-AS_CASE(["$target_os"],[freebsd*],[
+AS_CASE(["$target_os"],[midnightbsd*|freebsd*],[
          rb_cv_dtrace_available=no
 	 ])
 AS_IF([test "${enable_dtrace}" = yes], [dnl
@@ -3672,7 +3679,7 @@
 	DTRACE_REBUILD=yes
 	LIBRUBY_A_OBJS='$(DTRACE_GLOMMED_OBJ)'
     ])
-    AS_CASE("${target_os}", [freebsd*], [dnl
+    AS_CASE("${target_os}", [midnightbsd*|freebsd*], [dnl
         # FreeBSD's dtrace requires libelf
         LIBS="-lelf $LIBS"
     ])
@@ -4284,6 +4291,7 @@
         arch="${target_cpu}-mingw-ucrt"
     ], [
         arch="${target_cpu}-${target_os}"
+        AS_CASE(["$target_cpu-$target_os"], [x86_64-midnightbsd*|x86_64-freebsd*],[arch=amd64-${target_os}])
     ])
     AC_DEFINE_UNQUOTED(RUBY_PLATFORM, "$arch")
 ])
