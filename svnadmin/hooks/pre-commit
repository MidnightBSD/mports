#!/bin/sh

# $MidnightBSD$

# PRE-COMMIT HOOK
#
# The pre-commit hook is invoked before a Subversion txn is
# committed.  Subversion runs this hook by invoking a program
# (script, executable, binary, etc.) named 'pre-commit' (for which
# this file is a template), with the following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] TXN-NAME     (the name of the txn about to be committed)
#
# The default working directory for the invocation is undefined, so
# the program should set one explicitly if it cares.
#
# If the hook program exits with success, the txn is committed; but
# if it exits with failure (non-zero), the txn is aborted, no commit
# takes place, and STDERR is returned to the client.   The hook
# program can use the 'svnlook' utility to help it examine the txn.
#
# On a Unix system, the normal procedure is to have 'pre-commit'
# invoke other programs to do the real work, though it may do the
# work itself too.
#
#   ***  NOTE: THE HOOK PROGRAM MUST NOT MODIFY THE TXN, EXCEPT  ***
#   ***  FOR REVISION PROPERTIES (like svn:log or svn:author).   ***
#
#   This is why we recommend using the read-only 'svnlook' utility.
#   In the future, Subversion may enforce the rule that pre-commit
#   hooks should not modify the versioned data in txns, or else come
#   up with a mechanism to make it safe to do so (by informing the
#   committing client of the changes).  However, right now neither
#   mechanism is implemented, so hook writers just have to be careful.
#
# Note that 'pre-commit' must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# 'pre-commit.bat' or 'pre-commit.exe',
# but the basic idea is the same.
#
# The hook program typically does not inherit the environment of
# its parent process.  For example, a common problem is for the
# PATH environment variable to not be set to its usual value, so
# that subprograms fail to launch unless invoked via absolute path.
# If you're having unexpected problems with a hook program, the
# culprit may be unusual (or missing) environment variables.
#
# Here is an example hook script, for a Unix /bin/sh interpreter.
# For more examples and pre-written hooks, see those in
# the Subversion repository at
# http://svn.collab.net/repos/svn/trunk/tools/hook-scripts/ and
# http://svn.collab.net/repos/svn/trunk/contrib/hook-scripts/


REPO="$1"
TXN="$2"

. /home/svn/repos/mports/hooks/scripts/env.sh

# POLICY: mime-type must be unset, text/*, application/* or image/*
# POLICY: if a file does has mnbsd:nokeywords, then svn:keywords must not be set
# POLICY: if a file has binary chars and no mnbsd:notbinary, then pretend its not binary
# POLICY: if a file is binary, then it must have mime application/* or image/*
# POLICY: if a file does not have mnbsd:nokeywords, or is binary then svn:keywords must be set
# POLICY: if svn:keywords is set, $ MidnightBSD $ must be present and condensed.
# POLICY: If a file has text/*, then it must have eol-style
# POLICY: no svn:executable outside of Tools and svnadmin
# POLICY: file replacement is not allowed
verify.py "$REPO" -t "$TXN" || exit 1

# check for forbidden file names
deny-filenames.sh "$REPO" "$TXN" || exit 1

# check for misplaced mergeinfo
mergeinfo.sh "$REPO" "$TXN" || exit 1

# check for merge debris
detect-merge-conflicts.sh "$REPO" "$TXN" || exit 1

# check for newline at end of file
detect-nonewline-at-eof.sh "$REPO" "$TXN" || exit 1

# check for upper/lowercase filename conflicts on clients
case-insensitive.py "$REPO" "$TXN" || exit 1

# fix log message.
log-police.py -t "$TXN" "$REPO" || exit 1

# Nothing else, go ahead.
exit 0
