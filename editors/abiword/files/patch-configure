--- configure.orig	2010-05-22 09:12:00.000000000 +0200
+++ configure	2010-05-22 09:12:01.000000000 +0200
@@ -16637,9 +16637,9 @@
 xp_funcs='localeconv strcspn strncasecmp strtoul' # "sqrt" test fails, hmm
 funcs=
 
-if test "$PLATFORM" == "cocoa"; then
+if test "$PLATFORM" = "cocoa"; then
 	funcs="$cocoa_funcs $xp_funcs"
-elif test "$PLATFORM" == "unix"; then
+elif test "$PLATFORM" = "unix"; then
 
 for ac_header in sys/time.h
 do
@@ -17125,7 +17125,7 @@
   esac
 
 	funcs="$unix_funcs $xp_funcs"
-elif test "$PLATFORM" == "win"; then
+elif test "$PLATFORM" = "win"; then
 	funcs="$win_funcs $xp_funcs"
 fi
 
@@ -17244,7 +17244,7 @@
 # Check whether --enable-default-plugins was given.
 if test "${enable_default_plugins+set}" = set; then
   enableval=$enable_default_plugins;
-	if test "$enableval" == "no"; then
+	if test "$enableval" = "no"; then
 		abi_cv_disable_default_plugins="yes"
 	fi
 
@@ -17254,11 +17254,11 @@
 # Check whether --enable-plugins was given.
 if test "${enable_plugins+set}" = set; then
   enableval=$enable_plugins;
-	if test "$enableval" == "no"; then
+	if test "$enableval" = "no"; then
 		abi_cv_disable_exports="yes"
 		abi_cv_disable_default_plugins="yes"
 		abi_cv_plugins=""
-	elif test "$enableval" == "yes"; then
+	elif test "$enableval" = "yes"; then
 		# auto-detect which plugins can be built
 		abi_cv_plugins="auto"
 	else
@@ -17272,9 +17272,9 @@
 # Check whether --enable-builtin-plugins was given.
 if test "${enable_builtin_plugins+set}" = set; then
   enableval=$enable_builtin_plugins;
-	if test "$enableval" == "no"; then
+	if test "$enableval" = "no"; then
 		abi_cv_builtin_plugins=""
-	elif test "$enableval" == "yes"; then
+	elif test "$enableval" = "yes"; then
 		# just build default plugins
 		abi_cv_builtin_plugins=""
 	else
@@ -17309,8 +17309,8 @@
 fi
 
 
-if test "$abi_cv_print" == "yes" &&
-   test "$TOOLKIT" == "gtk"; then
+if test "$abi_cv_print" = "yes" &&
+   test "$TOOLKIT" = "gtk"; then
 	opt_pkgs="$opt_pkgs"
 fi
 
@@ -17438,7 +17438,7 @@
 else
 
 	# autodetect
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 		if test -n "$PKG_CONFIG" && \
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \" \$enchant_req \"") >&5
   ($PKG_CONFIG --exists --print-errors " $enchant_req ") 2>&5
@@ -17460,7 +17460,7 @@
 fi
 
 
-if test "$abi_cv_spell" == "yes"; then
+if test "$abi_cv_spell" = "yes"; then
 	opt_pkgs="$opt_pkgs $enchant_req"
 fi
 
@@ -17528,7 +17528,7 @@
 #
 # deferred from the "enable-embedded"
 #
-if test "$abi_cv_embedded_platform" == "hildon"; then
+if test "$abi_cv_embedded_platform" = "hildon"; then
 	opt_pkgs="$opt_pkgs $hildon_pkgs"
 fi
 
@@ -17536,7 +17536,7 @@
 # Check whether --enable-debug was given.
 if test "${enable_debug+set}" = set; then
   enableval=$enable_debug;
-	if test "$enableval" == "yes"; then
+	if test "$enableval" = "yes"; then
 		abi_cv_debug="yes"
 	fi
 
@@ -17560,7 +17560,7 @@
 else
 
 	# use gnomevfs if detected
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 		if test -n "$PKG_CONFIG" && \
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \" \$gnomevfs_req \"") >&5
   ($PKG_CONFIG --exists --print-errors " $gnomevfs_req ") 2>&5
@@ -17582,7 +17582,7 @@
 fi
 
 
-if test "$abi_cv_gnomevfs" == "yes"; then
+if test "$abi_cv_gnomevfs" = "yes"; then
 	opt_pkgs="$opt_pkgs $gnomevfs_req"
 fi
 
@@ -17613,7 +17613,7 @@
 fi
 
 
-if test "$abi_cv_gio" == "yes"; then
+if test "$abi_cv_gio" = "yes"; then
 	opt_pkgs="$opt_pkgs $gio_req"
 fi
 
@@ -17626,7 +17626,7 @@
 else
 
 	# use goffice if detected
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 	if test -n "$PKG_CONFIG" && \
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \" \$goffice_req \"") >&5
   ($PKG_CONFIG --exists --print-errors " $goffice_req ") 2>&5
@@ -17648,8 +17648,8 @@
 
 GOFFICE_BUILTIN_CPPFLAGS=
 GOFFICE_BUILTIN_LIBS=
-if test "$PLATFORM" == "unix" && \
-   test "$abi_cv_goffice" == "yes"; then
+if test "$PLATFORM" = "unix" && \
+   test "$abi_cv_goffice" = "yes"; then
 	opt_pkgs="$opt_pkgs $goffice_req"
 else
 	GOFFICE_BUILTIN_CPPFLAGS='-I${top_srcdir}/goffice-bits'
@@ -17688,7 +17688,7 @@
 # Check whether --with-abisdk was given.
 if test "${with_abisdk+set}" = set; then
   withval=$with_abisdk;
-	if test "x$withval" == "x"; then
+	if test "x$withval" = "x"; then
 		{ { $as_echo "$as_me:$LINENO: error: The AbiSDK path must be specified." >&5
 $as_echo "$as_me: error: The AbiSDK path must be specified." >&2;}
    { (exit 1); exit 1; }; }
@@ -18389,13 +18389,13 @@
 deps_pkgs="$xp_pkgs $opt_pkgs"
 SYSTEM_LIBS=
 SYSTEM_CFLAGS=
-if test "$TOOLKIT" == "win"; then
+if test "$TOOLKIT" = "win"; then
 	deps_pkgs="$deps_pkgs $win_pkgs"
 	# nonstandard dlls go below the blank line
 	SYSTEM_LIBS="-ladvapi32 -lcomctl32 -lcomdlg32 -lgdi32 -lkernel32 -lole32 -loleaut32 -lshell32 -luser32 -luuid -lversion -lwinspool \
 		      $PNG_LIBS -lz -ljpeg"
 	SYSTEM_CFLAGS="-mthreads"
-elif test "$TOOLKIT" == "cocoa"; then
+elif test "$TOOLKIT" = "cocoa"; then
 	deps_pkgs="$deps_pkgs $cocoa_pkgs"
 	SYSTEM_LIBS="-framework Cocoa"
 	# Extract the first word of "convert", so it can be a program name with args.
@@ -18551,7 +18551,7 @@
 $as_echo "yes" >&6; }
 	:
 fi
-if test "$TOOLKIT" == "gtk"; then
+if test "$TOOLKIT" = "gtk"; then
 
 pkg_failed=no
 { $as_echo "$as_me:$LINENO: checking for GTK214" >&5
@@ -18619,7 +18619,7 @@
 $as_echo "yes" >&6; }
 	abi_cv_gtk214=yes
 fi
-	if test "$abi_cv_gtk214" == "yes" ; then
+	if test "$abi_cv_gtk214" = "yes" ; then
 
 cat >>confdefs.h <<\_ACEOF
 #define HAVE_GTK214 1
@@ -18628,7 +18628,7 @@
 	fi
 fi
 
-if test "$TOOLKIT" == "gtk" -o "$TOOLKIT" == "cocoa"; then
+if test "$TOOLKIT" = "gtk" -o "$TOOLKIT" = "cocoa"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define WITH_CAIRO 1
@@ -18636,7 +18636,7 @@
 
 	WITH_CAIRO=1
 fi
- if test "$WITH_CAIRO" == "1"; then
+ if test "$WITH_CAIRO" = "1"; then
   WITH_CAIRO_TRUE=
   WITH_CAIRO_FALSE='#'
 else
@@ -18647,7 +18647,7 @@
 
 
 
-if test "$abi_cv_gio" == "yes"; then
+if test "$abi_cv_gio" = "yes"; then
 
 pkg_failed=no
 { $as_echo "$as_me:$LINENO: checking for GSFGI" >&5
@@ -18715,7 +18715,7 @@
 $as_echo "yes" >&6; }
 	abi_cv_gsf_gio=yes
 fi
-	if test "$abi_cv_gsf_gio" == "yes" ; then
+	if test "$abi_cv_gsf_gio" = "yes" ; then
 
 cat >>confdefs.h <<\_ACEOF
 #define HAVE_GSF_GIO 1
@@ -18811,7 +18811,7 @@
 
 ABIWORD_HEADERSDIR="${includedir}/${PACKAGE_NAME}-${ABIWORD_SERIES}"
 
-if test "$TOOLKIT" == "cocoa"; then
+if test "$TOOLKIT" = "cocoa"; then
 ABIWORD_CONTENTSDIR="/AbiWord.app/Contents"
 
 ABIWORD_DATADIR="${ABIWORD_CONTENTSDIR}/Resources"
@@ -18837,7 +18837,7 @@
 
 # maybe just switch on TOOLKIT instead of the fancy TARGET defines
 # also for embedded, e.g. hildon would set TOOLKIT_GTK and TOOLKIT_HILDON
- if test "$TOOLKIT" == "cocoa"; then
+ if test "$TOOLKIT" = "cocoa"; then
   TOOLKIT_COCOA_TRUE=
   TOOLKIT_COCOA_FALSE='#'
 else
@@ -18845,7 +18845,7 @@
   TOOLKIT_COCOA_FALSE=
 fi
 
- if test "$TOOLKIT" == "gtk"; then
+ if test "$TOOLKIT" = "gtk"; then
   TOOLKIT_GTK_TRUE=
   TOOLKIT_GTK_FALSE='#'
 else
@@ -18853,7 +18853,7 @@
   TOOLKIT_GTK_FALSE=
 fi
 
- if test "$TOOLKIT" == "win"; then
+ if test "$TOOLKIT" = "win"; then
   TOOLKIT_WIN_TRUE=
   TOOLKIT_WIN_FALSE='#'
 else
@@ -18862,15 +18862,15 @@
 fi
 
 
-if test "$enable_dynamic" == ""; then
+if test "$enable_dynamic" = ""; then
 	enable_dynamic="no"
 fi
 
-if test "$enable_static" == ""; then
+if test "$enable_static" = ""; then
 	enable_static="no"
 fi
 
-if test "$TOOLKIT" == "win"; then
+if test "$TOOLKIT" = "win"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define TOOLKIT_WIN 1
@@ -18889,7 +18889,7 @@
 	# override static/dynamic, on win32 only static is possible
 	enable_dynamic="no"
 	enable_static="yes"
-elif test "$TOOLKIT" == "cocoa"; then
+elif test "$TOOLKIT" = "cocoa"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define TOOLKIT_COCOA 1
@@ -18905,7 +18905,7 @@
 _ACEOF
 
 fi
- if test "$enable_dynamic" == "yes"; then
+ if test "$enable_dynamic" = "yes"; then
   ENABLE_DYNAMIC_TRUE=
   ENABLE_DYNAMIC_FALSE='#'
 else
@@ -18913,7 +18913,7 @@
   ENABLE_DYNAMIC_FALSE=
 fi
 
- if test "$enable_static" == "yes"; then
+ if test "$enable_static" = "yes"; then
   ENABLE_STATIC_TRUE=
   ENABLE_STATIC_FALSE='#'
 else
@@ -19032,22 +19032,22 @@
 	:
 fi
 PLUGIN_CFLAGS="$PLUGIN_CFLAGS "'${WP_CPPFLAGS} -DABI_DLL'
-if test "$TOOLKIT" == "gtk" &&
-   test "$enable_dynamic" == "yes"; then
+if test "$TOOLKIT" = "gtk" &&
+   test "$enable_dynamic" = "yes"; then
 	# link plugins to work around gcc visibility issue with
 	# derived classes in dlopened modules
 	PLUGIN_LIBS="$PLUGIN_LIBS "'-L${top_builddir}/src'" -labiword-$ABIWORD_SERIES"
-elif test "$TOOLKIT" == "win"; then
+elif test "$TOOLKIT" = "win"; then
 	PLUGIN_CFLAGS="$PLUGIN_CFLAGS "'-D_WIN32_IE=0x0501 -D_WIN32_WINNT=0x0500'
 	# link plugins to the executable so they can be loaded
 	PLUGIN_LIBS="$PLUGIN_LIBS "'-L${top_builddir}/src -labiword'
-elif test "$TOOLKIT" == "cocoa" ; then
+elif test "$TOOLKIT" = "cocoa" ; then
 	PLUGIN_LIBS="$PLUGIN_LIBS "'-L${top_builddir}/src'" -labiword-$ABIWORD_SERIES"
 fi
 
 
 
-if test "$abi_cv_disable_exports" == "yes"; then
+if test "$abi_cv_disable_exports" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define DISABLE_EXPORTS 1
@@ -19055,14 +19055,14 @@
 
 fi
 
-if test "$abi_cv_menubutton" == "yes"; then
+if test "$abi_cv_menubutton" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_MENUBUTTON 1
 _ACEOF
 
 fi
- if test "$abi_cv_menubutton" == "yes"; then
+ if test "$abi_cv_menubutton" = "yes"; then
   ENABLE_MENUBUTTON_TRUE=
   ENABLE_MENUBUTTON_FALSE='#'
 else
@@ -19071,14 +19071,14 @@
 fi
 
 
-if test "$abi_cv_print" == "yes"; then
+if test "$abi_cv_print" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_PRINT 1
 _ACEOF
 
 fi
- if test "$abi_cv_print" == "yes"; then
+ if test "$abi_cv_print" = "yes"; then
   ENABLE_PRINT_TRUE=
   ENABLE_PRINT_FALSE='#'
 else
@@ -19087,7 +19087,7 @@
 fi
 
 
-if test "$abi_cv_spell" == "yes"; then
+if test "$abi_cv_spell" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_SPELL 1
@@ -19100,7 +19100,7 @@
 _ACEOF
 
 fi
- if test "$abi_cv_spell" == "yes"; then
+ if test "$abi_cv_spell" = "yes"; then
   ENABLE_SPELL_TRUE=
   ENABLE_SPELL_FALSE='#'
 else
@@ -19109,14 +19109,14 @@
 fi
 
 
-if test "$abi_cv_statusbar" == "yes"; then
+if test "$abi_cv_statusbar" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_STATUSBAR 1
 _ACEOF
 
 fi
- if test "$abi_cv_statusbar" == "yes"; then
+ if test "$abi_cv_statusbar" = "yes"; then
   ENABLE_STATUSBAR_TRUE=
   ENABLE_STATUSBAR_FALSE='#'
 else
@@ -19132,7 +19132,7 @@
 _ACEOF
 
 fi
- if test "$abi_cv_embedded_target" == "EMBEDDED_TARGET_HILDON"; then
+ if test "$abi_cv_embedded_target" = "EMBEDDED_TARGET_HILDON"; then
   EMBEDDED_HILDON_TRUE=
   EMBEDDED_HILDON_FALSE='#'
 else
@@ -19141,14 +19141,14 @@
 fi
 
 
-if test "$abi_cv_emacs_keybinding" == "yes"; then
+if test "$abi_cv_emacs_keybinding" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_EMACS_KEYBINDING 1
 _ACEOF
 
 fi
- if test "$abi_cv_emacs_keybinding" == "yes"; then
+ if test "$abi_cv_emacs_keybinding" = "yes"; then
   ENABLE_EMACS_KEYBINDING_TRUE=
   ENABLE_EMACS_KEYBINDING_FALSE='#'
 else
@@ -19157,14 +19157,14 @@
 fi
 
 
-if test "$abi_cv_vi_keybinding" == "yes"; then
+if test "$abi_cv_vi_keybinding" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define ENABLE_VI_KEYBINDING 1
 _ACEOF
 
 fi
- if test "$abi_cv_vi_keybinding" == "yes"; then
+ if test "$abi_cv_vi_keybinding" = "yes"; then
   ENABLE_VI_KEYBINDING_TRUE=
   ENABLE_VI_KEYBINDING_FALSE='#'
 else
@@ -19173,7 +19173,7 @@
 fi
 
 
- if test "$abi_cv_clipart" == "yes"; then
+ if test "$abi_cv_clipart" = "yes"; then
   ENABLE_CLIPART_TRUE=
   ENABLE_CLIPART_FALSE='#'
 else
@@ -19181,7 +19181,7 @@
   ENABLE_CLIPART_FALSE=
 fi
 
- if test "$abi_cv_templates" == "yes"; then
+ if test "$abi_cv_templates" = "yes"; then
   ENABLE_TEMPLATES_TRUE=
   ENABLE_TEMPLATES_FALSE='#'
 else
@@ -19190,7 +19190,7 @@
 fi
 
 
-if test "$abi_cv_debug" == "yes"; then
+if test "$abi_cv_debug" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define DEBUG 1
@@ -19203,7 +19203,7 @@
 _ACEOF
 
 fi
- if test "$abi_cv_debug" == "yes"; then
+ if test "$abi_cv_debug" = "yes"; then
   DEBUG_TRUE=
   DEBUG_FALSE='#'
 else
@@ -19216,7 +19216,7 @@
 # Optional dependencies handling
 #
 
-if test "$abi_cv_gnomevfs" == "yes"; then
+if test "$abi_cv_gnomevfs" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define WITH_GNOMEVFS 1
@@ -19224,7 +19224,7 @@
 
 fi
 
-if test "$abi_cv_gio" == "yes"; then
+if test "$abi_cv_gio" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define WITH_GIO 1
@@ -19232,14 +19232,14 @@
 
 fi
 
-if test "$abi_cv_goffice" == "yes"; then
+if test "$abi_cv_goffice" = "yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define WITH_GOFFICE 1
 _ACEOF
 
 fi
- if test "$TOOLKIT" == "gtk" && test "$abi_cv_goffice" != "yes"; then
+ if test "$TOOLKIT" = "gtk" && test "$abi_cv_goffice" != "yes"; then
   WITH_GOFFICE_BUILTIN_TRUE=
   WITH_GOFFICE_BUILTIN_FALSE='#'
 else
@@ -19258,7 +19258,7 @@
 
 
 PLUGINS=
-if test "$abi_cv_plugins" == "auto"; then
+if test "$abi_cv_plugins" = "auto"; then
 
 	# which plugins to auto-enable
 	# this creates variables like "enable_wordperfect=auto"
@@ -19301,7 +19301,7 @@
 	BUILTIN_PLUGINS_LA="$BUILTIN_PLUGINS_LA ../../plugins/$plugin/$plugin.la"
 done
 
- if test "$enable_openxml_builtin" == "yes"; then
+ if test "$enable_openxml_builtin" = "yes"; then
   OPENXML_BUILTIN_TRUE=
   OPENXML_BUILTIN_FALSE='#'
 else
@@ -19309,7 +19309,7 @@
   OPENXML_BUILTIN_FALSE=
 fi
 
- if test "$enable_t602_builtin" == "yes"; then
+ if test "$enable_t602_builtin" = "yes"; then
   T602_BUILTIN_TRUE=
   T602_BUILTIN_FALSE='#'
 else
@@ -19317,7 +19317,7 @@
   T602_BUILTIN_FALSE=
 fi
 
- if test "$enable_docbook_builtin" == "yes"; then
+ if test "$enable_docbook_builtin" = "yes"; then
   DOCBOOK_BUILTIN_TRUE=
   DOCBOOK_BUILTIN_FALSE='#'
 else
@@ -19325,7 +19325,7 @@
   DOCBOOK_BUILTIN_FALSE=
 fi
 
- if test "$enable_gimp_builtin" == "yes"; then
+ if test "$enable_gimp_builtin" = "yes"; then
   GIMP_BUILTIN_TRUE=
   GIMP_BUILTIN_FALSE='#'
 else
@@ -19333,7 +19333,7 @@
   GIMP_BUILTIN_FALSE=
 fi
 
- if test "$enable_clarisworks_builtin" == "yes"; then
+ if test "$enable_clarisworks_builtin" = "yes"; then
   CLARISWORKS_BUILTIN_TRUE=
   CLARISWORKS_BUILTIN_FALSE='#'
 else
@@ -19341,7 +19341,7 @@
   CLARISWORKS_BUILTIN_FALSE=
 fi
 
- if test "$enable_bmp_builtin" == "yes"; then
+ if test "$enable_bmp_builtin" = "yes"; then
   BMP_BUILTIN_TRUE=
   BMP_BUILTIN_FALSE='#'
 else
@@ -19349,7 +19349,7 @@
   BMP_BUILTIN_FALSE=
 fi
 
- if test "$enable_wml_builtin" == "yes"; then
+ if test "$enable_wml_builtin" = "yes"; then
   WML_BUILTIN_TRUE=
   WML_BUILTIN_FALSE='#'
 else
@@ -19357,7 +19357,7 @@
   WML_BUILTIN_FALSE=
 fi
 
- if test "$enable_command_builtin" == "yes"; then
+ if test "$enable_command_builtin" = "yes"; then
   COMMAND_BUILTIN_TRUE=
   COMMAND_BUILTIN_FALSE='#'
 else
@@ -19365,7 +19365,7 @@
   COMMAND_BUILTIN_FALSE=
 fi
 
- if test "$enable_freetranslation_builtin" == "yes"; then
+ if test "$enable_freetranslation_builtin" = "yes"; then
   FREETRANSLATION_BUILTIN_TRUE=
   FREETRANSLATION_BUILTIN_FALSE='#'
 else
@@ -19373,7 +19373,7 @@
   FREETRANSLATION_BUILTIN_FALSE=
 fi
 
- if test "$enable_kword_builtin" == "yes"; then
+ if test "$enable_kword_builtin" = "yes"; then
   KWORD_BUILTIN_TRUE=
   KWORD_BUILTIN_FALSE='#'
 else
@@ -19381,7 +19381,7 @@
   KWORD_BUILTIN_FALSE=
 fi
 
- if test "$enable_iscii_builtin" == "yes"; then
+ if test "$enable_iscii_builtin" = "yes"; then
   ISCII_BUILTIN_TRUE=
   ISCII_BUILTIN_FALSE='#'
 else
@@ -19389,7 +19389,7 @@
   ISCII_BUILTIN_FALSE=
 fi
 
- if test "$enable_s5_builtin" == "yes"; then
+ if test "$enable_s5_builtin" = "yes"; then
   S5_BUILTIN_TRUE=
   S5_BUILTIN_FALSE='#'
 else
@@ -19397,7 +19397,7 @@
   S5_BUILTIN_FALSE=
 fi
 
- if test "$enable_babelfish_builtin" == "yes"; then
+ if test "$enable_babelfish_builtin" = "yes"; then
   BABELFISH_BUILTIN_TRUE=
   BABELFISH_BUILTIN_FALSE='#'
 else
@@ -19405,7 +19405,7 @@
   BABELFISH_BUILTIN_FALSE=
 fi
 
- if test "$enable_hancom_builtin" == "yes"; then
+ if test "$enable_hancom_builtin" = "yes"; then
   HANCOM_BUILTIN_TRUE=
   HANCOM_BUILTIN_FALSE='#'
 else
@@ -19413,7 +19413,7 @@
   HANCOM_BUILTIN_FALSE=
 fi
 
- if test "$enable_goffice_builtin" == "yes"; then
+ if test "$enable_goffice_builtin" = "yes"; then
   GOFFICE_BUILTIN_TRUE=
   GOFFICE_BUILTIN_FALSE='#'
 else
@@ -19421,7 +19421,7 @@
   GOFFICE_BUILTIN_FALSE=
 fi
 
- if test "$enable_mht_builtin" == "yes"; then
+ if test "$enable_mht_builtin" = "yes"; then
   MHT_BUILTIN_TRUE=
   MHT_BUILTIN_FALSE='#'
 else
@@ -19429,7 +19429,7 @@
   MHT_BUILTIN_FALSE=
 fi
 
- if test "$enable_openwriter_builtin" == "yes"; then
+ if test "$enable_openwriter_builtin" = "yes"; then
   OPENWRITER_BUILTIN_TRUE=
   OPENWRITER_BUILTIN_FALSE='#'
 else
@@ -19437,7 +19437,7 @@
   OPENWRITER_BUILTIN_FALSE=
 fi
 
- if test "$enable_ots_builtin" == "yes"; then
+ if test "$enable_ots_builtin" = "yes"; then
   OTS_BUILTIN_TRUE=
   OTS_BUILTIN_FALSE='#'
 else
@@ -19445,7 +19445,7 @@
   OTS_BUILTIN_FALSE=
 fi
 
- if test "$enable_opml_builtin" == "yes"; then
+ if test "$enable_opml_builtin" = "yes"; then
   OPML_BUILTIN_TRUE=
   OPML_BUILTIN_FALSE='#'
 else
@@ -19453,7 +19453,7 @@
   OPML_BUILTIN_FALSE=
 fi
 
- if test "$enable_pdf_builtin" == "yes"; then
+ if test "$enable_pdf_builtin" = "yes"; then
   PDF_BUILTIN_TRUE=
   PDF_BUILTIN_FALSE='#'
 else
@@ -19461,7 +19461,7 @@
   PDF_BUILTIN_FALSE=
 fi
 
- if test "$enable_collab_builtin" == "yes"; then
+ if test "$enable_collab_builtin" = "yes"; then
   COLLAB_BUILTIN_TRUE=
   COLLAB_BUILTIN_FALSE='#'
 else
@@ -19469,7 +19469,7 @@
   COLLAB_BUILTIN_FALSE=
 fi
 
- if test "$enable_paint_builtin" == "yes"; then
+ if test "$enable_paint_builtin" = "yes"; then
   PAINT_BUILTIN_TRUE=
   PAINT_BUILTIN_FALSE='#'
 else
@@ -19477,7 +19477,7 @@
   PAINT_BUILTIN_FALSE=
 fi
 
- if test "$enable_wmf_builtin" == "yes"; then
+ if test "$enable_wmf_builtin" = "yes"; then
   WMF_BUILTIN_TRUE=
   WMF_BUILTIN_FALSE='#'
 else
@@ -19485,7 +19485,7 @@
   WMF_BUILTIN_FALSE=
 fi
 
- if test "$enable_loadbindings_builtin" == "yes"; then
+ if test "$enable_loadbindings_builtin" = "yes"; then
   LOADBINDINGS_BUILTIN_TRUE=
   LOADBINDINGS_BUILTIN_FALSE='#'
 else
@@ -19493,7 +19493,7 @@
   LOADBINDINGS_BUILTIN_FALSE=
 fi
 
- if test "$enable_wpg_builtin" == "yes"; then
+ if test "$enable_wpg_builtin" = "yes"; then
   WPG_BUILTIN_TRUE=
   WPG_BUILTIN_FALSE='#'
 else
@@ -19501,7 +19501,7 @@
   WPG_BUILTIN_FALSE=
 fi
 
- if test "$enable_mswrite_builtin" == "yes"; then
+ if test "$enable_mswrite_builtin" = "yes"; then
   MSWRITE_BUILTIN_TRUE=
   MSWRITE_BUILTIN_FALSE='#'
 else
@@ -19509,7 +19509,7 @@
   MSWRITE_BUILTIN_FALSE=
 fi
 
- if test "$enable_rsvg_builtin" == "yes"; then
+ if test "$enable_rsvg_builtin" = "yes"; then
   RSVG_BUILTIN_TRUE=
   RSVG_BUILTIN_FALSE='#'
 else
@@ -19517,7 +19517,7 @@
   RSVG_BUILTIN_FALSE=
 fi
 
- if test "$enable_garble_builtin" == "yes"; then
+ if test "$enable_garble_builtin" = "yes"; then
   GARBLE_BUILTIN_TRUE=
   GARBLE_BUILTIN_FALSE='#'
 else
@@ -19525,7 +19525,7 @@
   GARBLE_BUILTIN_FALSE=
 fi
 
- if test "$enable_latex_builtin" == "yes"; then
+ if test "$enable_latex_builtin" = "yes"; then
   LATEX_BUILTIN_TRUE=
   LATEX_BUILTIN_FALSE='#'
 else
@@ -19533,7 +19533,7 @@
   LATEX_BUILTIN_FALSE=
 fi
 
- if test "$enable_pdb_builtin" == "yes"; then
+ if test "$enable_pdb_builtin" = "yes"; then
   PDB_BUILTIN_TRUE=
   PDB_BUILTIN_FALSE='#'
 else
@@ -19541,7 +19541,7 @@
   PDB_BUILTIN_FALSE=
 fi
 
- if test "$enable_eml_builtin" == "yes"; then
+ if test "$enable_eml_builtin" = "yes"; then
   EML_BUILTIN_TRUE=
   EML_BUILTIN_FALSE='#'
 else
@@ -19549,7 +19549,7 @@
   EML_BUILTIN_FALSE=
 fi
 
- if test "$enable_wordperfect_builtin" == "yes"; then
+ if test "$enable_wordperfect_builtin" = "yes"; then
   WORDPERFECT_BUILTIN_TRUE=
   WORDPERFECT_BUILTIN_FALSE='#'
 else
@@ -19557,7 +19557,7 @@
   WORDPERFECT_BUILTIN_FALSE=
 fi
 
- if test "$enable_wikipedia_builtin" == "yes"; then
+ if test "$enable_wikipedia_builtin" = "yes"; then
   WIKIPEDIA_BUILTIN_TRUE=
   WIKIPEDIA_BUILTIN_FALSE='#'
 else
@@ -19565,7 +19565,7 @@
   WIKIPEDIA_BUILTIN_FALSE=
 fi
 
- if test "$enable_gda_builtin" == "yes"; then
+ if test "$enable_gda_builtin" = "yes"; then
   GDA_BUILTIN_TRUE=
   GDA_BUILTIN_FALSE='#'
 else
@@ -19573,7 +19573,7 @@
   GDA_BUILTIN_FALSE=
 fi
 
- if test "$enable_aiksaurus_builtin" == "yes"; then
+ if test "$enable_aiksaurus_builtin" = "yes"; then
   AIKSAURUS_BUILTIN_TRUE=
   AIKSAURUS_BUILTIN_FALSE='#'
 else
@@ -19581,7 +19581,7 @@
   AIKSAURUS_BUILTIN_FALSE=
 fi
 
- if test "$enable_applix_builtin" == "yes"; then
+ if test "$enable_applix_builtin" = "yes"; then
   APPLIX_BUILTIN_TRUE=
   APPLIX_BUILTIN_FALSE='#'
 else
@@ -19589,7 +19589,7 @@
   APPLIX_BUILTIN_FALSE=
 fi
 
- if test "$enable_grammar_builtin" == "yes"; then
+ if test "$enable_grammar_builtin" = "yes"; then
   GRAMMAR_BUILTIN_TRUE=
   GRAMMAR_BUILTIN_FALSE='#'
 else
@@ -19597,7 +19597,7 @@
   GRAMMAR_BUILTIN_FALSE=
 fi
 
- if test "$enable_mathview_builtin" == "yes"; then
+ if test "$enable_mathview_builtin" = "yes"; then
   MATHVIEW_BUILTIN_TRUE=
   MATHVIEW_BUILTIN_FALSE='#'
 else
@@ -19605,7 +19605,7 @@
   MATHVIEW_BUILTIN_FALSE=
 fi
 
- if test "$enable_gdict_builtin" == "yes"; then
+ if test "$enable_gdict_builtin" = "yes"; then
   GDICT_BUILTIN_TRUE=
   GDICT_BUILTIN_FALSE='#'
 else
@@ -19613,7 +19613,7 @@
   GDICT_BUILTIN_FALSE=
 fi
 
- if test "$enable_passepartout_builtin" == "yes"; then
+ if test "$enable_passepartout_builtin" = "yes"; then
   PASSEPARTOUT_BUILTIN_TRUE=
   PASSEPARTOUT_BUILTIN_FALSE='#'
 else
@@ -19621,7 +19621,7 @@
   PASSEPARTOUT_BUILTIN_FALSE=
 fi
 
- if test "$enable_xslfo_builtin" == "yes"; then
+ if test "$enable_xslfo_builtin" = "yes"; then
   XSLFO_BUILTIN_TRUE=
   XSLFO_BUILTIN_FALSE='#'
 else
@@ -19629,7 +19629,7 @@
   XSLFO_BUILTIN_FALSE=
 fi
 
- if test "$enable_opendocument_builtin" == "yes"; then
+ if test "$enable_opendocument_builtin" = "yes"; then
   OPENDOCUMENT_BUILTIN_TRUE=
   OPENDOCUMENT_BUILTIN_FALSE='#'
 else
@@ -19637,7 +19637,7 @@
   OPENDOCUMENT_BUILTIN_FALSE=
 fi
 
- if test "$enable_google_builtin" == "yes"; then
+ if test "$enable_google_builtin" = "yes"; then
   GOOGLE_BUILTIN_TRUE=
   GOOGLE_BUILTIN_FALSE='#'
 else
@@ -19645,7 +19645,7 @@
   GOOGLE_BUILTIN_FALSE=
 fi
 
- if test "$enable_sdw_builtin" == "yes"; then
+ if test "$enable_sdw_builtin" = "yes"; then
   SDW_BUILTIN_TRUE=
   SDW_BUILTIN_FALSE='#'
 else
@@ -19653,7 +19653,7 @@
   SDW_BUILTIN_FALSE=
 fi
 
- if test "$enable_presentation_builtin" == "yes"; then
+ if test "$enable_presentation_builtin" = "yes"; then
   PRESENTATION_BUILTIN_TRUE=
   PRESENTATION_BUILTIN_FALSE='#'
 else
@@ -19661,7 +19661,7 @@
   PRESENTATION_BUILTIN_FALSE=
 fi
 
- if test "$enable_urldict_builtin" == "yes"; then
+ if test "$enable_urldict_builtin" = "yes"; then
   URLDICT_BUILTIN_TRUE=
   URLDICT_BUILTIN_FALSE='#'
 else
@@ -19669,7 +19669,7 @@
   URLDICT_BUILTIN_FALSE=
 fi
 
- if test "$enable_psion_builtin" == "yes"; then
+ if test "$enable_psion_builtin" = "yes"; then
   PSION_BUILTIN_TRUE=
   PSION_BUILTIN_FALSE='#'
 else
@@ -19677,7 +19677,7 @@
   PSION_BUILTIN_FALSE=
 fi
 
- if test "$enable_hrtext_builtin" == "yes"; then
+ if test "$enable_hrtext_builtin" = "yes"; then
   HRTEXT_BUILTIN_TRUE=
   HRTEXT_BUILTIN_FALSE='#'
 else
@@ -19685,7 +19685,7 @@
   HRTEXT_BUILTIN_FALSE=
 fi
 
- if test "$enable_mif_builtin" == "yes"; then
+ if test "$enable_mif_builtin" = "yes"; then
   MIF_BUILTIN_TRUE=
   MIF_BUILTIN_FALSE='#'
 else
@@ -19853,7 +19853,7 @@
 
 else
 
-		if test "$enable_openxml" == "auto"; then
+		if test "$enable_openxml" = "auto"; then
 		  { $as_echo "$as_me:$LINENO: WARNING: openxml plugin: \`boost/shared_ptr.hpp' not found, install boost or specify CPPFLAGS to include custom locations" >&5
 $as_echo "$as_me: WARNING: openxml plugin: \`boost/shared_ptr.hpp' not found, install boost or specify CPPFLAGS to include custom locations" >&2;}
 		else
@@ -19874,15 +19874,15 @@
 
 else
 
-	test "$enable_openxml" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: openxml plugin: dependencies not satisfied - $openxml_pkgs" >&5
+	test "$enable_openxml" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: openxml plugin: dependencies not satisfied - $openxml_pkgs" >&5
 $as_echo "$as_me: WARNING: openxml plugin: dependencies not satisfied - $openxml_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_openxml" == "yes" || \
-   test "$openxml_deps" == "yes"; then
+if test "$enable_openxml" = "yes" || \
+   test "$openxml_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -19994,12 +19994,12 @@
 	:
 fi
 
-test "$enable_openxml" == "auto" && PLUGINS="$PLUGINS openxml"
+test "$enable_openxml" = "auto" && PLUGINS="$PLUGINS openxml"
 
 OPENXML_CFLAGS="$OPENXML_CFLAGS "'${PLUGIN_CFLAGS}'
 OPENXML_LIBS="$OPENXML_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_openxml_builtin" == "yes"; then
+if test "$enable_openxml_builtin" = "yes"; then
 	OPENXML_CFLAGS="$OPENXML_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -20025,15 +20025,15 @@
 
 else
 
-	test "$enable_t602" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: t602 plugin: dependencies not satisfied - $t602_pkgs" >&5
+	test "$enable_t602" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: t602 plugin: dependencies not satisfied - $t602_pkgs" >&5
 $as_echo "$as_me: WARNING: t602 plugin: dependencies not satisfied - $t602_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_t602" == "yes" || \
-   test "$t602_deps" == "yes"; then
+if test "$enable_t602" = "yes" || \
+   test "$t602_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -20145,12 +20145,12 @@
 	:
 fi
 
-test "$enable_t602" == "auto" && PLUGINS="$PLUGINS t602"
+test "$enable_t602" = "auto" && PLUGINS="$PLUGINS t602"
 
 T602_CFLAGS="$T602_CFLAGS "'${PLUGIN_CFLAGS}'
 T602_LIBS="$T602_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_t602_builtin" == "yes"; then
+if test "$enable_t602_builtin" = "yes"; then
 	T602_CFLAGS="$T602_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -20176,15 +20176,15 @@
 
 else
 
-	test "$enable_docbook" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: docbook plugin: dependencies not satisfied - $docbook_pkgs" >&5
+	test "$enable_docbook" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: docbook plugin: dependencies not satisfied - $docbook_pkgs" >&5
 $as_echo "$as_me: WARNING: docbook plugin: dependencies not satisfied - $docbook_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_docbook" == "yes" || \
-   test "$docbook_deps" == "yes"; then
+if test "$enable_docbook" = "yes" || \
+   test "$docbook_deps" = "yes"; then
 
 { $as_echo "$as_me:$LINENO: checking whether time.h and sys/time.h may both be included" >&5
 $as_echo_n "checking whether time.h and sys/time.h may both be included... " >&6; }
@@ -20359,12 +20359,12 @@
 	:
 fi
 
-test "$enable_docbook" == "auto" && PLUGINS="$PLUGINS docbook"
+test "$enable_docbook" = "auto" && PLUGINS="$PLUGINS docbook"
 
 DOCBOOK_CFLAGS="$DOCBOOK_CFLAGS "'${PLUGIN_CFLAGS}'
 DOCBOOK_LIBS="$DOCBOOK_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_docbook_builtin" == "yes"; then
+if test "$enable_docbook_builtin" = "yes"; then
 	DOCBOOK_CFLAGS="$DOCBOOK_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -20379,12 +20379,12 @@
 
 if test "$enable_gimp" != ""; then
 
-test "$enable_gimp" == "auto" && PLUGINS="$PLUGINS gimp"
+test "$enable_gimp" = "auto" && PLUGINS="$PLUGINS gimp"
 
 GIMP_CFLAGS="$GIMP_CFLAGS "'${PLUGIN_CFLAGS}'
 GIMP_LIBS="$GIMP_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_gimp_builtin" == "yes"; then
+if test "$enable_gimp_builtin" = "yes"; then
 	GIMP_CFLAGS="$GIMP_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -20410,15 +20410,15 @@
 
 else
 
-	test "$enable_clarisworks" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: clarisworks plugin: dependencies not satisfied - $clarisworks_pkgs" >&5
+	test "$enable_clarisworks" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: clarisworks plugin: dependencies not satisfied - $clarisworks_pkgs" >&5
 $as_echo "$as_me: WARNING: clarisworks plugin: dependencies not satisfied - $clarisworks_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_clarisworks" == "yes" || \
-   test "$clarisworks_deps" == "yes"; then
+if test "$enable_clarisworks" = "yes" || \
+   test "$clarisworks_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -20530,12 +20530,12 @@
 	:
 fi
 
-test "$enable_clarisworks" == "auto" && PLUGINS="$PLUGINS clarisworks"
+test "$enable_clarisworks" = "auto" && PLUGINS="$PLUGINS clarisworks"
 
 CLARISWORKS_CFLAGS="$CLARISWORKS_CFLAGS "'${PLUGIN_CFLAGS}'
 CLARISWORKS_LIBS="$CLARISWORKS_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_clarisworks_builtin" == "yes"; then
+if test "$enable_clarisworks_builtin" = "yes"; then
 	CLARISWORKS_CFLAGS="$CLARISWORKS_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -20555,19 +20555,19 @@
 
 fi
 
-if test "$enable_bmp" == "yes" || \
-   test "$bmp_deps" == "yes"; then
+if test "$enable_bmp" = "yes" || \
+   test "$bmp_deps" = "yes"; then
 
 # TODO check for libpng, well abiword links to it anyways
 
 BMP_CFLAGS="$BMP_CFLAGS $PNG_CFLAGS "'${PLUGIN_CFLAGS}'
 BMP_LIBS="$BMP_LIBS $PNG_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_bmp_builtin" == "yes"; then
+if test "$enable_bmp_builtin" = "yes"; then
 	BMP_CFLAGS="$BMP_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
-test "$enable_bmp" == "auto" && PLUGINS="$PLUGINS bmp"
+test "$enable_bmp" = "auto" && PLUGINS="$PLUGINS bmp"
 
 fi
 
@@ -20591,15 +20591,15 @@
 
 else
 
-	test "$enable_wml" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: wml plugin: dependencies not satisfied - $wml_pkgs" >&5
+	test "$enable_wml" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: wml plugin: dependencies not satisfied - $wml_pkgs" >&5
 $as_echo "$as_me: WARNING: wml plugin: dependencies not satisfied - $wml_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_wml" == "yes" || \
-   test "$wml_deps" == "yes"; then
+if test "$enable_wml" = "yes" || \
+   test "$wml_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -20711,12 +20711,12 @@
 	:
 fi
 
-test "$enable_wml" == "auto" && PLUGINS="$PLUGINS wml"
+test "$enable_wml" = "auto" && PLUGINS="$PLUGINS wml"
 
 WML_CFLAGS="$WML_CFLAGS "'${PLUGIN_CFLAGS}'
 WML_LIBS="$WML_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_wml_builtin" == "yes"; then
+if test "$enable_wml_builtin" = "yes"; then
 	WML_CFLAGS="$WML_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21158,10 +21158,10 @@
 	fi
 fi
 
-if test "$enable_command" == "yes" || \
-   test "$command_deps" == "yes"; then
+if test "$enable_command" = "yes" || \
+   test "$command_deps" = "yes"; then
 
-if test "$enable_command_builtin" == "yes"; then
+if test "$enable_command_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: command plugin: static linking not supported" >&5
 $as_echo "$as_me: error: command plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -21179,7 +21179,7 @@
         COMMAND_LIBS="-lreadline -lhistory $COMMAND_LIBS"
 fi
 
-test "$enable_command" == "auto" && PLUGINS="$PLUGINS command"
+test "$enable_command" = "auto" && PLUGINS="$PLUGINS command"
 
 COMMAND_CFLAGS="$COMMAND_CFLAGS "'${PLUGIN_CFLAGS}'
 COMMAND_LIBS="$COMMAND_LIBS "'${PLUGIN_LIBS}'
@@ -21195,12 +21195,12 @@
 
 if test "$enable_freetranslation" != ""; then
 
-test "$enable_freetranslation" == "auto" && PLUGINS="$PLUGINS freetranslation"
+test "$enable_freetranslation" = "auto" && PLUGINS="$PLUGINS freetranslation"
 
 FREETRANSLATION_CFLAGS="$FREETRANSLATION_CFLAGS "'${PLUGIN_CFLAGS}'
 FREETRANSLATION_LIBS="$FREETRANSLATION_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_freetranslation_builtin" == "yes"; then
+if test "$enable_freetranslation_builtin" = "yes"; then
 	FREETRANSLATION_CFLAGS="$FREETRANSLATION_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21226,15 +21226,15 @@
 
 else
 
-	test "$enable_kword" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: kword plugin: dependencies not satisfied - $kword_pkgs" >&5
+	test "$enable_kword" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: kword plugin: dependencies not satisfied - $kword_pkgs" >&5
 $as_echo "$as_me: WARNING: kword plugin: dependencies not satisfied - $kword_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_kword" == "yes" || \
-   test "$kword_deps" == "yes"; then
+if test "$enable_kword" = "yes" || \
+   test "$kword_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -21346,7 +21346,7 @@
 	:
 fi
 
-test "$enable_kword" == "auto" && PLUGINS="$PLUGINS kword"
+test "$enable_kword" = "auto" && PLUGINS="$PLUGINS kword"
 
 KWORD_CFLAGS="$KWORD_CFLAGS "'${PLUGIN_CFLAGS}'
 KWORD_LIBS="$KWORD_LIBS "'${PLUGIN_LIBS}'
@@ -21366,12 +21366,12 @@
 
 if test "$enable_iscii" != ""; then
 
-test "$enable_iscii" == "auto" && PLUGINS="$PLUGINS iscii"
+test "$enable_iscii" = "auto" && PLUGINS="$PLUGINS iscii"
 
 ISCII_CFLAGS="$ISCII_CFLAGS "'${PLUGIN_CFLAGS}'
 ISCII_LIBS="$ISCII_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_iscii_builtin" == "yes"; then
+if test "$enable_iscii_builtin" = "yes"; then
 	ISCII_CFLAGS="$ISCII_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21386,12 +21386,12 @@
 
 if test "$enable_s5" != ""; then
 
-test "$enable_s5" == "auto" && PLUGINS="$PLUGINS s5"
+test "$enable_s5" = "auto" && PLUGINS="$PLUGINS s5"
 
 S5_CFLAGS="$S5_CFLAGS "'${PLUGIN_CFLAGS}'
 S5_LIBS="$S5_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_s5_builtin" == "yes"; then
+if test "$enable_s5_builtin" = "yes"; then
 	S5_CFLAGS="$S5_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21406,12 +21406,12 @@
 
 if test "$enable_babelfish" != ""; then
 
-test "$enable_babelfish" == "auto" && PLUGINS="$PLUGINS babelfish"
+test "$enable_babelfish" = "auto" && PLUGINS="$PLUGINS babelfish"
 
 BABELFISH_CFLAGS="$BABELFISH_CFLAGS "'${PLUGIN_CFLAGS}'
 BABELFISH_LIBS="$BABELFISH_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_babelfish_builtin" == "yes"; then
+if test "$enable_babelfish_builtin" = "yes"; then
 	BABELFISH_CFLAGS="$BABELFISH_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21437,15 +21437,15 @@
 
 else
 
-	test "$enable_hancom" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: hancom plugin: dependencies not satisfied - $hancom_pkgs" >&5
+	test "$enable_hancom" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: hancom plugin: dependencies not satisfied - $hancom_pkgs" >&5
 $as_echo "$as_me: WARNING: hancom plugin: dependencies not satisfied - $hancom_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_hancom" == "yes" || \
-   test "$hancom_deps" == "yes"; then
+if test "$enable_hancom" = "yes" || \
+   test "$hancom_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -21557,12 +21557,12 @@
 	:
 fi
 
-test "$enable_hancom" == "auto" && PLUGINS="$PLUGINS hancom"
+test "$enable_hancom" = "auto" && PLUGINS="$PLUGINS hancom"
 
 HANCOM_CFLAGS="$HANCOM_CFLAGS "'${PLUGIN_CFLAGS}'
 HANCOM_LIBS="$HANCOM_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_hancom_builtin" == "yes"; then
+if test "$enable_hancom_builtin" = "yes"; then
 	HANCOM_CFLAGS="$HANCOM_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -21598,14 +21598,14 @@
 
 	{ $as_echo "$as_me:$LINENO: checking for gtk toolkit" >&5
 $as_echo_n "checking for gtk toolkit... " >&6; }
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 	  { $as_echo "$as_me:$LINENO: result: yes" >&5
 $as_echo "yes" >&6; }
 	  goffice_deps="yes"
 	else
 	  { $as_echo "$as_me:$LINENO: result: no" >&5
 $as_echo "no" >&6; }
-	  if test "$enable_goffice" == "auto"; then
+	  if test "$enable_goffice" = "auto"; then
 	    { $as_echo "$as_me:$LINENO: WARNING: goffice plugin: only supported with gtk" >&5
 $as_echo "$as_me: WARNING: goffice plugin: only supported with gtk" >&2;}
 	  else
@@ -21617,17 +21617,17 @@
 
 else
 
-	test "$enable_goffice" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: goffice plugin: dependencies not satisfied - $goffice_pkgs" >&5
+	test "$enable_goffice" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: goffice plugin: dependencies not satisfied - $goffice_pkgs" >&5
 $as_echo "$as_me: WARNING: goffice plugin: dependencies not satisfied - $goffice_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_goffice" == "yes" || \
-   test "$goffice_deps" == "yes"; then
+if test "$enable_goffice" = "yes" || \
+   test "$goffice_deps" = "yes"; then
 
-if test "$enable_goffice_builtin" == "yes"; then
+if test "$enable_goffice_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: goffice plugin: static linking not supported" >&5
 $as_echo "$as_me: error: goffice plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -21743,7 +21743,7 @@
 	:
 fi
 
-test "$enable_goffice" == "auto" && PLUGINS="$PLUGINS goffice"
+test "$enable_goffice" = "auto" && PLUGINS="$PLUGINS goffice"
 
 GOFFICE_CFLAGS="$GOFFICE_CFLAGS "'${PLUGIN_CFLAGS}'
 GOFFICE_LIBS="$GOFFICE_LIBS "'${PLUGIN_LIBS}'
@@ -21801,19 +21801,19 @@
 
 else
 
-	test "$enable_mht" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: mht plugin: dependencies not satisfied - $mht_pkgs" >&5
+	test "$enable_mht" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: mht plugin: dependencies not satisfied - $mht_pkgs" >&5
 $as_echo "$as_me: WARNING: mht plugin: dependencies not satisfied - $mht_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_mht" == "yes" || \
-   test "$mht_deps" == "yes"; then
+if test "$enable_mht" = "yes" || \
+   test "$mht_deps" = "yes"; then
 
-test "$enable_mht" == "auto" && PLUGINS="$PLUGINS mht"
+test "$enable_mht" = "auto" && PLUGINS="$PLUGINS mht"
 
-if test "$enable_mht_builtin" == "yes"; then
+if test "$enable_mht_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: mht plugin: static linking not supported" >&5
 $as_echo "$as_me: error: mht plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -22143,27 +22143,27 @@
 # Settings
 #
 
-if test "$mht_cv_inter7eps" == "yes" &&
-   test "$inter7eps_found" == "no"; then
+if test "$mht_cv_inter7eps" = "yes" &&
+   test "$inter7eps_found" = "no"; then
 	{ { $as_echo "$as_me:$LINENO: error: MHT plugin: error - inter7 EPS headers not found" >&5
 $as_echo "$as_me: error: MHT plugin: error - inter7 EPS headers not found" >&2;}
    { (exit 1); exit 1; }; }
-elif test "$mht_cv_inter7eps" == "auto"; then
+elif test "$mht_cv_inter7eps" = "auto"; then
 	mht_cv_inter7eps="$inter7eps_found"
 fi
-if test "$mht_cv_inter7eps" == "yes"; then
+if test "$mht_cv_inter7eps" = "yes"; then
 	MHT_OPT_LIBS="$MHT_OPT_LIBS -leps"
 fi
 
-if test "$mht_cv_libtidy" == "yes" &&
-   test "$libtidy_found" == "no"; then
+if test "$mht_cv_libtidy" = "yes" &&
+   test "$libtidy_found" = "no"; then
 	{ { $as_echo "$as_me:$LINENO: error: MHT plugin: error - libtidy headers not found" >&5
 $as_echo "$as_me: error: MHT plugin: error - libtidy headers not found" >&2;}
    { (exit 1); exit 1; }; }
-elif test "$mht_cv_libtidy" == "auto"; then
+elif test "$mht_cv_libtidy" = "auto"; then
 	mht_cv_libtidy="$libtidy_found"
 fi
-if test "$mht_cv_libtidy" == "yes"; then
+if test "$mht_cv_libtidy" = "yes"; then
 	MHT_OPT_LIBS="$MHT_OPT_LIBS -ltidy"
 fi
 
@@ -22294,7 +22294,7 @@
   ABI_XHTML_XML2_FALSE=
 fi
 
- if test "$mht_cv_inter7eps" == "yes"; then
+ if test "$mht_cv_inter7eps" = "yes"; then
   ABI_XHTML_MHT_TRUE=
   ABI_XHTML_MHT_FALSE='#'
 else
@@ -22302,7 +22302,7 @@
   ABI_XHTML_MHT_FALSE=
 fi
 
- if test "$mht_cv_libtidy" == "yes"; then
+ if test "$mht_cv_libtidy" = "yes"; then
   ABI_XHTML_TIDY_TRUE=
   ABI_XHTML_TIDY_FALSE='#'
 else
@@ -22328,15 +22328,15 @@
 
 else
 
-	test "$enable_openwriter" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: openwriter plugin: dependencies not satisfied - $openwriter_pkgs" >&5
+	test "$enable_openwriter" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: openwriter plugin: dependencies not satisfied - $openwriter_pkgs" >&5
 $as_echo "$as_me: WARNING: openwriter plugin: dependencies not satisfied - $openwriter_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_openwriter" == "yes" || \
-   test "$openwriter_deps" == "yes"; then
+if test "$enable_openwriter" = "yes" || \
+   test "$openwriter_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -22448,12 +22448,12 @@
 	:
 fi
 
-test "$enable_openwriter" == "auto" && PLUGINS="$PLUGINS openwriter"
+test "$enable_openwriter" = "auto" && PLUGINS="$PLUGINS openwriter"
 
 OPENWRITER_CFLAGS="$OPENWRITER_CFLAGS "'${PLUGIN_CFLAGS}'
 OPENWRITER_LIBS="$OPENWRITER_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_openwriter_builtin" == "yes"; then
+if test "$enable_openwriter_builtin" = "yes"; then
 	OPENWRITER_CFLAGS="$OPENWRITER_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -22479,19 +22479,19 @@
 
 else
 
-	test "$enable_ots" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: ots plugin: dependencies not satisfied - $ots_pkgs" >&5
+	test "$enable_ots" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: ots plugin: dependencies not satisfied - $ots_pkgs" >&5
 $as_echo "$as_me: WARNING: ots plugin: dependencies not satisfied - $ots_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_ots" == "yes" || \
-   test "$ots_deps" == "yes"; then
+if test "$enable_ots" = "yes" || \
+   test "$ots_deps" = "yes"; then
 
-test "$enable_ots" == "auto" && PLUGINS="$PLUGINS ots"
+test "$enable_ots" = "auto" && PLUGINS="$PLUGINS ots"
 
-if test "$enable_ots_builtin" == "yes"; then
+if test "$enable_ots_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: ots plugin: static linking not supported" >&5
 $as_echo "$as_me: error: ots plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -22621,12 +22621,12 @@
 
 if test "$enable_opml" != ""; then
 
-test "$enable_opml" == "auto" && PLUGINS="$PLUGINS opml"
+test "$enable_opml" = "auto" && PLUGINS="$PLUGINS opml"
 
 OPML_CFLAGS="$OPML_CFLAGS "'${PLUGIN_CFLAGS}'
 OPML_LIBS="$OPML_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_opml_builtin" == "yes"; then
+if test "$enable_opml_builtin" = "yes"; then
 	OPML_CFLAGS="$OPML_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -22655,15 +22655,15 @@
 
 else
 
-	test "$enable_pdf" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: pdf plugin: dependencies not satisfied - $pdf_pkgs" >&5
+	test "$enable_pdf" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: pdf plugin: dependencies not satisfied - $pdf_pkgs" >&5
 $as_echo "$as_me: WARNING: pdf plugin: dependencies not satisfied - $pdf_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_pdf" == "yes" || \
-   test "$pdf_deps" == "yes"; then
+if test "$enable_pdf" = "yes" || \
+   test "$pdf_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -22775,12 +22775,12 @@
 	:
 fi
 
-test "$enable_pdf" == "auto" && PLUGINS="$PLUGINS pdf"
+test "$enable_pdf" = "auto" && PLUGINS="$PLUGINS pdf"
 
 PDF_CFLAGS="$PDF_CFLAGS "'${PLUGIN_CFLAGS}'
 PDF_LIBS="$PDF_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_pdf_builtin" == "yes"; then
+if test "$enable_pdf_builtin" = "yes"; then
 	PDF_CFLAGS="$PDF_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -22825,7 +22825,7 @@
 
 fi
 
-test "$enable_collab_backend_telepathy" == "yes" && collab_pkgs="$collab_pkgs $collab_telepathy_req"
+test "$enable_collab_backend_telepathy" = "yes" && collab_pkgs="$collab_pkgs $collab_telepathy_req"
 { $as_echo "$as_me:$LINENO: checking for collab telepathy backend" >&5
 $as_echo_n "checking for collab telepathy backend... " >&6; }
 { $as_echo "$as_me:$LINENO: result: $enable_collab_backend_telepathy" >&5
@@ -22852,7 +22852,7 @@
 
 fi
 
-test "$enable_collab_backend_xmpp" == "yes" && collab_pkgs="$collab_pkgs $collab_xmpp_req"
+test "$enable_collab_backend_xmpp" = "yes" && collab_pkgs="$collab_pkgs $collab_xmpp_req"
 { $as_echo "$as_me:$LINENO: checking for collab xmpp backend" >&5
 $as_echo_n "checking for collab xmpp backend... " >&6; }
 { $as_echo "$as_me:$LINENO: result: $enable_collab_backend_xmpp" >&5
@@ -23227,7 +23227,7 @@
 
 fi
 
-test "$enable_collab_backend_sugar" == "yes" && collab_pkgs="$collab_pkgs $collab_sugar_req"
+test "$enable_collab_backend_sugar" = "yes" && collab_pkgs="$collab_pkgs $collab_sugar_req"
 { $as_echo "$as_me:$LINENO: checking for collab sugar backend" >&5
 $as_echo_n "checking for collab sugar backend... " >&6; }
 { $as_echo "$as_me:$LINENO: result: $enable_collab_backend_sugar" >&5
@@ -23577,7 +23577,7 @@
 
 fi
 
-test "$enable_collab_backend_service" == "yes" && collab_pkgs="$collab_pkgs $collab_service_req"
+test "$enable_collab_backend_service" = "yes" && collab_pkgs="$collab_pkgs $collab_service_req"
 { $as_echo "$as_me:$LINENO: checking for collab service backend" >&5
 $as_echo_n "checking for collab service backend... " >&6; }
 { $as_echo "$as_me:$LINENO: result: $enable_collab_backend_service" >&5
@@ -23616,17 +23616,17 @@
 
 fi
 
-if test "$enable_collab" == "yes" || \
-   test "$collab_deps" == "yes"; then
+if test "$enable_collab" = "yes" || \
+   test "$collab_deps" = "yes"; then
 
-if test "$enable_collab_builtin" == "yes"; then
+if test "$enable_collab_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: collab plugin: static linking not supported" >&5
 $as_echo "$as_me: error: collab plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
 fi
 
 # HACK, no way to detect, check only if explicitely enabled
-if test "$enable_collab" == "yes"; then
+if test "$enable_collab" = "yes"; then
 # check for various boost libs, needs to be done before
 
 
@@ -24014,48 +24014,48 @@
 	:
 fi
 
-if test "$enable_collab_backend_fake" == "yes"; then
+if test "$enable_collab_backend_fake" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_FAKE"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_FAKE"
 fi
-if test "$enable_collab_backend_telepathy" == "yes"; then
+if test "$enable_collab_backend_telepathy" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_TELEPATHY"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_TELEPATHY"
 fi
-if test "$enable_collab_backend_xmpp" == "yes"; then
+if test "$enable_collab_backend_xmpp" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_XMPP"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_XMPP"
 fi
-if test "$enable_collab_backend_tcp" == "yes"; then
+if test "$enable_collab_backend_tcp" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_TCP"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_TCP"
 fi
-if test "$enable_collab_backend_sugar" == "yes"; then
+if test "$enable_collab_backend_sugar" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_SUGAR"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_SUGAR"
 fi
-if test "$enable_collab_backend_service" == "yes"; then
+if test "$enable_collab_backend_service" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_HANDLER_SERVICE -DSOUP24"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_HANDLER_SERVICE"
 fi
-if test "$enable_collab_record_always" == "yes"; then
+if test "$enable_collab_record_always" = "yes"; then
 	COLLAB_CFLAGS="$COLLAB_CFLAGS -DABICOLLAB_RECORD_ALWAYS"
 	COLLAB_RCFLAGS="$COLLAB_RCFLAGS -DABICOLLAB_RECORD_ALWAYS"
 fi
 
-if test "$enable_collab_backend_tcp" == "yes" || \
-   test "$enable_collab_backend_service" == "yes"; then
+if test "$enable_collab_backend_tcp" = "yes" || \
+   test "$enable_collab_backend_service" = "yes"; then
 	COLLAB_LIBS="$COLLAB_LIBS -lgcrypt -pthread"
 fi
 
-test "$enable_collab" == "auto" && PLUGINS="$PLUGINS collab"
+test "$enable_collab" = "auto" && PLUGINS="$PLUGINS collab"
 
 COLLAB_CFLAGS="$COLLAB_CFLAGS "'${PLUGIN_CFLAGS}'
 COLLAB_LIBS="$COLLAB_LIBS "'${PLUGIN_LIBS}'
 
 fi # plugin conditional
 
- if test "$enable_collab_backend_fake" == "yes"; then
+ if test "$enable_collab_backend_fake" = "yes"; then
   COLLAB_BACKEND_FAKE_TRUE=
   COLLAB_BACKEND_FAKE_FALSE='#'
 else
@@ -24063,7 +24063,7 @@
   COLLAB_BACKEND_FAKE_FALSE=
 fi
 
- if test "$enable_collab_backend_telepathy" == "yes"; then
+ if test "$enable_collab_backend_telepathy" = "yes"; then
   COLLAB_BACKEND_TELEPATHY_TRUE=
   COLLAB_BACKEND_TELEPATHY_FALSE='#'
 else
@@ -24071,7 +24071,7 @@
   COLLAB_BACKEND_TELEPATHY_FALSE=
 fi
 
- if test "$enable_collab_backend_xmpp" == "yes"; then
+ if test "$enable_collab_backend_xmpp" = "yes"; then
   COLLAB_BACKEND_XMPP_TRUE=
   COLLAB_BACKEND_XMPP_FALSE='#'
 else
@@ -24079,7 +24079,7 @@
   COLLAB_BACKEND_XMPP_FALSE=
 fi
 
- if test "$enable_collab_backend_tcp" == "yes"; then
+ if test "$enable_collab_backend_tcp" = "yes"; then
   COLLAB_BACKEND_TCP_TRUE=
   COLLAB_BACKEND_TCP_FALSE='#'
 else
@@ -24087,7 +24087,7 @@
   COLLAB_BACKEND_TCP_FALSE=
 fi
 
- if test "$enable_collab_backend_sugar" == "yes"; then
+ if test "$enable_collab_backend_sugar" = "yes"; then
   COLLAB_BACKEND_SUGAR_TRUE=
   COLLAB_BACKEND_SUGAR_FALSE='#'
 else
@@ -24095,7 +24095,7 @@
   COLLAB_BACKEND_SUGAR_FALSE=
 fi
 
- if test "$enable_collab_backend_service" == "yes"; then
+ if test "$enable_collab_backend_service" = "yes"; then
   COLLAB_BACKEND_SERVICE_TRUE=
   COLLAB_BACKEND_SERVICE_FALSE='#'
 else
@@ -24103,7 +24103,7 @@
   COLLAB_BACKEND_SERVICE_FALSE=
 fi
 
- if test "$enable_collab_record_always" == "yes"; then
+ if test "$enable_collab_record_always" = "yes"; then
   COLLAB_RECORD_ALWAYS_TRUE=
   COLLAB_RECORD_ALWAYS_FALSE='#'
 else
@@ -24122,10 +24122,10 @@
 
 if test "$enable_paint" != ""; then
 
-test "$enable_paint" == "auto" && PLUGINS="$PLUGINS paint"
+test "$enable_paint" = "auto" && PLUGINS="$PLUGINS paint"
 
 # TODO check for libpng
-if test "$TOOLKIT" == "win"; then
+if test "$TOOLKIT" = "win"; then
 	PAINT_LIBS="-lgdi32 $PNG_LIBS"
 	PAINT_CFLAGS="$PAINT_CFLAGS $PNG_CFLAGS"
 fi
@@ -24133,7 +24133,7 @@
 PAINT_CFLAGS="$PAINT_CFLAGS "'${PLUGIN_CFLAGS}'
 PAINT_LIBS="$PAINT_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_paint_builtin" == "yes"; then
+if test "$enable_paint_builtin" = "yes"; then
 	PAINT_CFLAGS="$PAINT_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -24242,8 +24242,8 @@
 
 if test "$enable_wmf" != ""; then
 
-	if test "$libwmfconfig" == ""; then
-		if test "$enable_wmf" == "yes"; then
+	if test "$libwmfconfig" = ""; then
+		if test "$enable_wmf" = "yes"; then
 		  { { $as_echo "$as_me:$LINENO: error: wmf plugin: program libwmf-config not found in path" >&5
 $as_echo "$as_me: error: wmf plugin: program libwmf-config not found in path" >&2;}
    { (exit 1); exit 1; }; }
@@ -24272,10 +24272,10 @@
 	fi
 fi
 
-if test "$enable_wmf" == "yes" || \
-   test "$wmf_deps" == "yes"; then
+if test "$enable_wmf" = "yes" || \
+   test "$wmf_deps" = "yes"; then
 
-if test "$enable_wmf_builtin" == "yes"; then
+if test "$enable_wmf_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: wmf plugin: static linking not supported" >&5
 $as_echo "$as_me: error: wmf plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -24283,7 +24283,7 @@
 
 { $as_echo "$as_me:$LINENO: checking for libwmf >= ${libwmf_major_req}.${libwmf_minor_req}.${libwmf_micro_req}" >&5
 $as_echo_n "checking for libwmf >= ${libwmf_major_req}.${libwmf_minor_req}.${libwmf_micro_req}... " >&6; }
-if test "$wmf_deps" == "yes"; then
+if test "$wmf_deps" = "yes"; then
 	{ $as_echo "$as_me:$LINENO: result: version ${libwmf_major_found}.${libwmf_minor_found}.${libwmf_micro_found} (ok)" >&5
 $as_echo "version ${libwmf_major_found}.${libwmf_minor_found}.${libwmf_micro_found} (ok)" >&6; }
 	WMF_CFLAGS=`$libwmfconfig --cflags`
@@ -24294,7 +24294,7 @@
    { (exit 1); exit 1; }; }
 fi
 
-test "$enable_wmf" == "auto" && PLUGINS="$PLUGINS wmf"
+test "$enable_wmf" = "auto" && PLUGINS="$PLUGINS wmf"
 
 WMF_CFLAGS="$WMF_CFLAGS "'${PLUGIN_CFLAGS}'
 WMF_LIBS="$WMF_LIBS "'${PLUGIN_LIBS}'
@@ -24321,15 +24321,15 @@
 
 else
 
-	test "$enable_loadbindings" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: loadbindings plugin: dependencies not satisfied - $loadbindings_pkgs" >&5
+	test "$enable_loadbindings" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: loadbindings plugin: dependencies not satisfied - $loadbindings_pkgs" >&5
 $as_echo "$as_me: WARNING: loadbindings plugin: dependencies not satisfied - $loadbindings_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_loadbindings" == "yes" || \
-   test "$loadbindings_deps" == "yes"; then
+if test "$enable_loadbindings" = "yes" || \
+   test "$loadbindings_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -24441,12 +24441,12 @@
 	:
 fi
 
-test "$enable_loadbindings" == "auto" && PLUGINS="$PLUGINS loadbindings"
+test "$enable_loadbindings" = "auto" && PLUGINS="$PLUGINS loadbindings"
 
 LOADBINDINGS_CFLAGS="$LOADBINDINGS_CFLAGS "'${PLUGIN_CFLAGS}'
 LOADBINDINGS_LIBS="$LOADBINDINGS_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_loadbindings_builtin" == "yes"; then
+if test "$enable_loadbindings_builtin" = "yes"; then
 	LOADBINDINGS_CFLAGS="$LOADBINDINGS_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -24472,17 +24472,17 @@
 
 else
 
-	test "$enable_wpg" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: wpg plugin: dependencies not satisfied - $wpg_pkgs" >&5
+	test "$enable_wpg" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: wpg plugin: dependencies not satisfied - $wpg_pkgs" >&5
 $as_echo "$as_me: WARNING: wpg plugin: dependencies not satisfied - $wpg_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_wpg" == "yes" || \
-   test "$wpg_deps" == "yes"; then
+if test "$enable_wpg" = "yes" || \
+   test "$wpg_deps" = "yes"; then
 
-if test "$enable_wpg_builtin" == "yes"; then
+if test "$enable_wpg_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: wpg plugin: static linking not supported" >&5
 $as_echo "$as_me: error: wpg plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -24598,7 +24598,7 @@
 	:
 fi
 
-test "$enable_wpg" == "auto" && PLUGINS="$PLUGINS wpg"
+test "$enable_wpg" = "auto" && PLUGINS="$PLUGINS wpg"
 
 WPG_CFLAGS="$WPG_CFLAGS "'${PLUGIN_CFLAGS}'
 WPG_LIBS="$WPG_LIBS "'${PLUGIN_LIBS}'
@@ -24625,15 +24625,15 @@
 
 else
 
-	test "$enable_mswrite" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: mswrite plugin: dependencies not satisfied - $mswrite_pkgs" >&5
+	test "$enable_mswrite" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: mswrite plugin: dependencies not satisfied - $mswrite_pkgs" >&5
 $as_echo "$as_me: WARNING: mswrite plugin: dependencies not satisfied - $mswrite_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_mswrite" == "yes" || \
-   test "$mswrite_deps" == "yes"; then
+if test "$enable_mswrite" = "yes" || \
+   test "$mswrite_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -24745,12 +24745,12 @@
 	:
 fi
 
-test "$enable_mswrite" == "auto" && PLUGINS="$PLUGINS mswrite"
+test "$enable_mswrite" = "auto" && PLUGINS="$PLUGINS mswrite"
 
 MSWRITE_CFLAGS="$MSWRITE_CFLAGS "'${PLUGIN_CFLAGS}'
 MSWRITE_LIBS="$MSWRITE_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_mswrite_builtin" == "yes"; then
+if test "$enable_mswrite_builtin" = "yes"; then
 	MSWRITE_CFLAGS="$MSWRITE_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -24763,9 +24763,9 @@
 rsvg_pkgs="librsvg-2.0 >= 2.0 glib-2.0"
 rsvg_deps="no"
 
-if test "$TOOLKIT" == "gtk"; then
+if test "$TOOLKIT" = "gtk"; then
 
- if test "$enable_rsvg" == "auto"; then
+ if test "$enable_rsvg" = "auto"; then
    { $as_echo "$as_me:$LINENO: WARNING: rsvg plugin: not needed with gtk" >&5
 $as_echo "$as_me: WARNING: rsvg plugin: not needed with gtk" >&2;}
  fi
@@ -24785,17 +24785,17 @@
 
 else
 
-	test "$enable_rsvg" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: rsvg plugin: dependencies not satisfied - $rsvg_pkgs" >&5
+	test "$enable_rsvg" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: rsvg plugin: dependencies not satisfied - $rsvg_pkgs" >&5
 $as_echo "$as_me: WARNING: rsvg plugin: dependencies not satisfied - $rsvg_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_rsvg" == "yes" || \
-   test "$rsvg_deps" == "yes"; then
+if test "$enable_rsvg" = "yes" || \
+   test "$rsvg_deps" = "yes"; then
 
-if test "$enable_rsvg_builtin" == "yes"; then
+if test "$enable_rsvg_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: rsvg plugin: static linking not supported" >&5
 $as_echo "$as_me: error: rsvg plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -24911,7 +24911,7 @@
 	:
 fi
 
-test "$enable_rsvg" == "auto" && PLUGINS="$PLUGINS rsvg"
+test "$enable_rsvg" = "auto" && PLUGINS="$PLUGINS rsvg"
 
 RSVG_CFLAGS="$RSVG_CFLAGS "'${PLUGIN_CFLAGS}'
 RSVG_LIBS="$RSVG_LIBS "'${PLUGIN_LIBS}'
@@ -24938,15 +24938,15 @@
 
 else
 
-	test "$enable_garble" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: garble plugin: dependencies not satisfied - $garble_pkgs" >&5
+	test "$enable_garble" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: garble plugin: dependencies not satisfied - $garble_pkgs" >&5
 $as_echo "$as_me: WARNING: garble plugin: dependencies not satisfied - $garble_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_garble" == "yes" || \
-   test "$garble_deps" == "yes"; then
+if test "$enable_garble" = "yes" || \
+   test "$garble_deps" = "yes"; then
 
 { $as_echo "$as_me:$LINENO: checking whether time.h and sys/time.h may both be included" >&5
 $as_echo_n "checking whether time.h and sys/time.h may both be included... " >&6; }
@@ -25121,12 +25121,12 @@
 	:
 fi
 
-test "$enable_garble" == "auto" && PLUGINS="$PLUGINS garble"
+test "$enable_garble" = "auto" && PLUGINS="$PLUGINS garble"
 
 GARBLE_CFLAGS="$GARBLE_CFLAGS $PNG_CFLAGS "'${PLUGIN_CFLAGS}'
 GARBLE_LIBS="$GARBLE_LIBS $PNG_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_garble_builtin" == "yes"; then
+if test "$enable_garble_builtin" = "yes"; then
 	GARBLE_CFLAGS="$GARBLE_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -25155,7 +25155,7 @@
 	abi_cv_libxslt="no"
 
 fi
- if test "$abi_cv_libxslt" == "yes"; then
+ if test "$abi_cv_libxslt" = "yes"; then
   HAVE_LIBXSLT_TRUE=
   HAVE_LIBXSLT_FALSE='#'
 else
@@ -25166,9 +25166,9 @@
 
 if test "$enable_latex" != ""; then
 
-test "$enable_latex" == "auto" && PLUGINS="$PLUGINS latex"
+test "$enable_latex" = "auto" && PLUGINS="$PLUGINS latex"
 
-if test "$abi_cv_libxslt" == "yes"; then
+if test "$abi_cv_libxslt" = "yes"; then
 
 pkg_failed=no
 { $as_echo "$as_me:$LINENO: checking for LIBXSLT" >&5
@@ -25398,7 +25398,7 @@
 LATEX_CFLAGS="$LATEX_CFLAGS "'${PLUGIN_CFLAGS}'
 LATEX_LIBS="$LATEX_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_latex_builtin" == "yes"; then
+if test "$enable_latex_builtin" = "yes"; then
 	LATEX_CFLAGS="$LATEX_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -25424,15 +25424,15 @@
 
 else
 
-	test "$enable_pdb" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: pdb plugin: dependencies not satisfied - $pdb_pkgs" >&5
+	test "$enable_pdb" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: pdb plugin: dependencies not satisfied - $pdb_pkgs" >&5
 $as_echo "$as_me: WARNING: pdb plugin: dependencies not satisfied - $pdb_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_pdb" == "yes" || \
-   test "$pdb_deps" == "yes"; then
+if test "$enable_pdb" = "yes" || \
+   test "$pdb_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -25544,12 +25544,12 @@
 	:
 fi
 
-test "$enable_pdb" == "auto" && PLUGINS="$PLUGINS pdb"
+test "$enable_pdb" = "auto" && PLUGINS="$PLUGINS pdb"
 
 PDB_CFLAGS="$PDB_CFLAGS "'${PLUGIN_CFLAGS}'
 PDB_LIBS="$PDB_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_pdb_builtin" == "yes"; then
+if test "$enable_pdb_builtin" = "yes"; then
 	PDB_CFLAGS="$PDB_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -25564,12 +25564,12 @@
 
 if test "$enable_eml" != ""; then
 
-test "$enable_eml" == "auto" && PLUGINS="$PLUGINS eml"
+test "$enable_eml" = "auto" && PLUGINS="$PLUGINS eml"
 
 EML_CFLAGS="$EML_CFLAGS "'${PLUGIN_CFLAGS}'
 EML_LIBS="$EML_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_eml_builtin" == "yes"; then
+if test "$enable_eml_builtin" = "yes"; then
 	EML_CFLAGS="$EML_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -25600,17 +25600,17 @@
 
 else
 
-	test "$enable_wordperfect" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: wordperfect plugin: dependencies not satisfied - $wordperfect_pkgs" >&5
+	test "$enable_wordperfect" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: wordperfect plugin: dependencies not satisfied - $wordperfect_pkgs" >&5
 $as_echo "$as_me: WARNING: wordperfect plugin: dependencies not satisfied - $wordperfect_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_wordperfect" == "yes" || \
-   test "$wordperfect_deps" == "yes"; then
+if test "$enable_wordperfect" = "yes" || \
+   test "$wordperfect_deps" = "yes"; then
 
-if test "$enable_wordperfect_builtin" == "yes"; then
+if test "$enable_wordperfect_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: wordperfect plugin: static linking not supported" >&5
 $as_echo "$as_me: error: wordperfect plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -25740,7 +25740,7 @@
 	:
 fi
 
-test "$enable_wordperfect" == "auto" && PLUGINS="$PLUGINS wordperfect"
+test "$enable_wordperfect" = "auto" && PLUGINS="$PLUGINS wordperfect"
 
 WORDPERFECT_CFLAGS="$WORDPERFECT_CFLAGS "'${PLUGIN_CFLAGS}'"$WPS_DEFINE"
 WORDPERFECT_LIBS="$WORDPERFECT_LIBS "'${PLUGIN_LIBS}'
@@ -25756,12 +25756,12 @@
 
 if test "$enable_wikipedia" != ""; then
 
-test "$enable_wikipedia" == "auto" && PLUGINS="$PLUGINS wikipedia"
+test "$enable_wikipedia" = "auto" && PLUGINS="$PLUGINS wikipedia"
 
 WIKIPEDIA_CFLAGS="$WIKIPEDIA_CFLAGS "'${PLUGIN_CFLAGS}'
 WIKIPEDIA_LIBS="$WIKIPEDIA_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_wikipedia_builtin" == "yes"; then
+if test "$enable_wikipedia_builtin" = "yes"; then
 	WIKIPEDIA_CFLAGS="$WIKIPEDIA_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -25785,14 +25785,14 @@
 
 	{ $as_echo "$as_me:$LINENO: checking for gtk toolkit" >&5
 $as_echo_n "checking for gtk toolkit... " >&6; }
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 	  { $as_echo "$as_me:$LINENO: result: yes" >&5
 $as_echo "yes" >&6; }
 	  gda_deps="yes"
 	else
 	  { $as_echo "$as_me:$LINENO: result: no" >&5
 $as_echo "no" >&6; }
-	  if test "$enable_gda" == "auto"; then
+	  if test "$enable_gda" = "auto"; then
 	    { $as_echo "$as_me:$LINENO: WARNING: gda plugin: only supported with gtk" >&5
 $as_echo "$as_me: WARNING: gda plugin: only supported with gtk" >&2;}
 	  else
@@ -25804,17 +25804,17 @@
 
 else
 
-	test "$enable_gda" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: gda plugin: dependencies not satisfied - $gda_pkgs" >&5
+	test "$enable_gda" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: gda plugin: dependencies not satisfied - $gda_pkgs" >&5
 $as_echo "$as_me: WARNING: gda plugin: dependencies not satisfied - $gda_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_gda" == "yes" || \
-   test "$gda_deps" == "yes"; then
+if test "$enable_gda" = "yes" || \
+   test "$gda_deps" = "yes"; then
 
-if test "$enable_gda_builtin" == "yes"; then
+if test "$enable_gda_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: gda plugin: static linking not supported" >&5
 $as_echo "$as_me: error: gda plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -25930,7 +25930,7 @@
 	:
 fi
 
-test "$enable_gda" == "auto" && PLUGINS="$PLUGINS gda"
+test "$enable_gda" = "auto" && PLUGINS="$PLUGINS gda"
 
 GDA_CFLAGS="$GDA_CFLAGS "'${PLUGIN_CFLAGS}'
 GDA_LIBS="$GDA_LIBS "'${PLUGIN_LIBS}'
@@ -25954,7 +25954,7 @@
   $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
 
-	if test "$TOOLKIT" == "gtk"; then
+	if test "$TOOLKIT" = "gtk"; then
 	if test -n "$PKG_CONFIG" && \
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \" \$aiksaurus_gtk_pkgs \"") >&5
   ($PKG_CONFIG --exists --print-errors " $aiksaurus_gtk_pkgs ") 2>&5
@@ -25966,7 +25966,7 @@
 
 else
 
-		test "$enable_aiksaurus" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_gtk_pkgs" >&5
+		test "$enable_aiksaurus" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_gtk_pkgs" >&5
 $as_echo "$as_me: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_gtk_pkgs" >&2;}
 
 fi
@@ -25976,17 +25976,17 @@
 
 else
 
-	test "$enable_aiksaurus" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_pkgs" >&5
+	test "$enable_aiksaurus" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_pkgs" >&5
 $as_echo "$as_me: WARNING: aiksaurus plugin: dependencies not satisfied - $aiksaurus_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_aiksaurus" == "yes" || \
-   test "$aiksaurus_deps" == "yes"; then
+if test "$enable_aiksaurus" = "yes" || \
+   test "$aiksaurus_deps" = "yes"; then
 
-if test "$enable_aiksaurus_builtin" == "yes"; then
+if test "$enable_aiksaurus_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: aiksaurus plugin: static linking not supported" >&5
 $as_echo "$as_me: error: aiksaurus plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -26102,7 +26102,7 @@
 	:
 fi
 
-if test "$TOOLKIT" == "gtk"; then
+if test "$TOOLKIT" = "gtk"; then
 
 pkg_failed=no
 { $as_echo "$as_me:$LINENO: checking for AIKSAURUS_GTK" >&5
@@ -26216,7 +26216,7 @@
 	AIKSAURUS_LIBS="$AIKSAURUS_LIBS $AIKSAURUS_GTK_LIBS"
 fi
 
-test "$enable_aiksaurus" == "auto" && PLUGINS="$PLUGINS aiksaurus"
+test "$enable_aiksaurus" = "auto" && PLUGINS="$PLUGINS aiksaurus"
 
 AIKSAURUS_CFLAGS="$AIKSAURUS_CFLAGS "'${PLUGIN_CFLAGS}'
 AIKSAURUS_LIBS="$AIKSAURUS_LIBS "'${PLUGIN_LIBS}'
@@ -26243,15 +26243,15 @@
 
 else
 
-	test "$enable_applix" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: applix plugin: dependencies not satisfied - $applix_pkgs" >&5
+	test "$enable_applix" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: applix plugin: dependencies not satisfied - $applix_pkgs" >&5
 $as_echo "$as_me: WARNING: applix plugin: dependencies not satisfied - $applix_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_applix" == "yes" || \
-   test "$applix_deps" == "yes"; then
+if test "$enable_applix" = "yes" || \
+   test "$applix_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -26363,12 +26363,12 @@
 	:
 fi
 
-test "$enable_applix" == "auto" && PLUGINS="$PLUGINS applix"
+test "$enable_applix" = "auto" && PLUGINS="$PLUGINS applix"
 
 APPLIX_CFLAGS="$APPLIX_CFLAGS "'${PLUGIN_CFLAGS}'
 APPLIX_LIBS="$APPLIX_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_applix_builtin" == "yes"; then
+if test "$enable_applix_builtin" = "yes"; then
 	APPLIX_CFLAGS="$APPLIX_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -26381,7 +26381,7 @@
 grammar_pkgs='link-grammar >= 4.2.1'
 grammar_deps="no"
 
-if test "$enable_grammar" != "" && test  "$abi_cv_spell" == "yes"; then
+if test "$enable_grammar" != "" && test  "$abi_cv_spell" = "yes"; then
 
 if test -n "$PKG_CONFIG" && \
     { ($as_echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \" \$grammar_pkgs \"") >&5
@@ -26394,17 +26394,17 @@
 
 else
 
-	test "$enable_grammar" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: grammar plugin: dependencies not satisfied - $grammar_pkgs" >&5
+	test "$enable_grammar" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: grammar plugin: dependencies not satisfied - $grammar_pkgs" >&5
 $as_echo "$as_me: WARNING: grammar plugin: dependencies not satisfied - $grammar_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_grammar" == "yes" || \
-   test "$grammar_deps" == "yes"; then
+if test "$enable_grammar" = "yes" || \
+   test "$grammar_deps" = "yes"; then
 
-if test "$enable_grammar_builtin" == "yes"; then
+if test "$enable_grammar_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: grammar plugin: static linking not supported" >&5
 $as_echo "$as_me: error: grammar plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -26520,7 +26520,7 @@
 	:
 fi
 
-test "$enable_grammar" == "auto" && PLUGINS="$PLUGINS grammar"
+test "$enable_grammar" = "auto" && PLUGINS="$PLUGINS grammar"
 
 GRAMMAR_CFLAGS="$GRAMMAR_CFLAGS "'${PLUGIN_CFLAGS}'
 GRAMMAR_LIBS="$GRAMMAR_LIBS "'${PLUGIN_LIBS}'
@@ -26850,17 +26850,17 @@
 
 else
 
-	test "$enable_mathview" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: mathview plugin: dependencies not satisfied - $mathview_pkgs" >&5
+	test "$enable_mathview" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: mathview plugin: dependencies not satisfied - $mathview_pkgs" >&5
 $as_echo "$as_me: WARNING: mathview plugin: dependencies not satisfied - $mathview_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_mathview" == "yes" || \
-   test "$mathview_deps" == "yes"; then
+if test "$enable_mathview" = "yes" || \
+   test "$mathview_deps" = "yes"; then
 
-if test "$enable_mathview_builtin" == "yes"; then
+if test "$enable_mathview_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: mathview plugin: static linking not supported" >&5
 $as_echo "$as_me: error: mathview plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -26976,7 +26976,7 @@
 	:
 fi
 
-test "$enable_mathview" == "auto" && PLUGINS="$PLUGINS mathview"
+test "$enable_mathview" = "auto" && PLUGINS="$PLUGINS mathview"
 
 MATHVIEW_CFLAGS="$MATHVIEW_CFLAGS $HASHMAP_CFLAGS "'${PLUGIN_CFLAGS}'
 MATHVIEW_LIBS="$MATHVIEW_LIBS "'${PLUGIN_LIBS}'
@@ -27258,14 +27258,14 @@
 
 { $as_echo "$as_me:$LINENO: checking for unix/gtk platform" >&5
 $as_echo_n "checking for unix/gtk platform... " >&6; }
-if test "$TOOLKIT" == "gtk"; then
+if test "$TOOLKIT" = "gtk"; then
   { $as_echo "$as_me:$LINENO: result: yes" >&5
 $as_echo "yes" >&6; }
   gdict_deps="yes"
 else
   { $as_echo "$as_me:$LINENO: result: no" >&5
 $as_echo "no" >&6; }
-  if test "$enable_gdict" == "auto"; then
+  if test "$enable_gdict" = "auto"; then
     { $as_echo "$as_me:$LINENO: WARNING: gdict plugin: only supported on UNIX/gtk platforms" >&5
 $as_echo "$as_me: WARNING: gdict plugin: only supported on UNIX/gtk platforms" >&2;}
   else
@@ -27277,8 +27277,8 @@
 
 fi
 
-if test "$enable_gdict" == "yes" || \
-   test "$gdict_deps" == "yes"; then
+if test "$enable_gdict" = "yes" || \
+   test "$gdict_deps" = "yes"; then
 
 { $as_echo "$as_me:$LINENO: checking for pid_t" >&5
 $as_echo_n "checking for pid_t... " >&6; }
@@ -27385,7 +27385,7 @@
 fi
 
 
-test "$enable_gdict" == "auto" && PLUGINS="$PLUGINS gdict"
+test "$enable_gdict" = "auto" && PLUGINS="$PLUGINS gdict"
 
 GDICT_CFLAGS="$GDICT_CFLAGS "'${PLUGIN_CFLAGS} -DUSE_FORK_AND_EXEC_METHOD=1'
 GDICT_LIBS='${PLUGIN_LIBS}'
@@ -27405,12 +27405,12 @@
 
 if test "$enable_passepartout" != ""; then
 
-test "$enable_passepartout" == "auto" && PLUGINS="$PLUGINS passepartout"
+test "$enable_passepartout" = "auto" && PLUGINS="$PLUGINS passepartout"
 
 PASSEPARTOUT_CFLAGS="$PASSEPARTOUT_CFLAGS "'${PLUGIN_CFLAGS}'
 PASSEPARTOUT_LIBS="$PASSEPARTOUT_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_passepartout_builtin" == "yes"; then
+if test "$enable_passepartout_builtin" = "yes"; then
 	PASSEPARTOUT_CFLAGS="$PASSEPARTOUT_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27436,15 +27436,15 @@
 
 else
 
-	test "$enable_xslfo" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: xslfo plugin: dependencies not satisfied - $xslfo_pkgs" >&5
+	test "$enable_xslfo" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: xslfo plugin: dependencies not satisfied - $xslfo_pkgs" >&5
 $as_echo "$as_me: WARNING: xslfo plugin: dependencies not satisfied - $xslfo_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_xslfo" == "yes" || \
-   test "$xslfo_deps" == "yes"; then
+if test "$enable_xslfo" = "yes" || \
+   test "$xslfo_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -27556,12 +27556,12 @@
 	:
 fi
 
-test "$enable_xslfo" == "auto" && PLUGINS="$PLUGINS xslfo"
+test "$enable_xslfo" = "auto" && PLUGINS="$PLUGINS xslfo"
 
 XSLFO_CFLAGS="$XSLFO_CFLAGS "'${PLUGIN_CFLAGS}'
 XSLFO_LIBS="$XSLFO_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_xslfo_builtin" == "yes"; then
+if test "$enable_xslfo_builtin" = "yes"; then
 	XSLFO_CFLAGS="$XSLFO_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27587,15 +27587,15 @@
 
 else
 
-	test "$enable_opendocument" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: opendocument plugin: dependencies not satisfied - $opendocument_pkgs" >&5
+	test "$enable_opendocument" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: opendocument plugin: dependencies not satisfied - $opendocument_pkgs" >&5
 $as_echo "$as_me: WARNING: opendocument plugin: dependencies not satisfied - $opendocument_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_opendocument" == "yes" || \
-   test "$opendocument_deps" == "yes"; then
+if test "$enable_opendocument" = "yes" || \
+   test "$opendocument_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -27707,12 +27707,12 @@
 	:
 fi
 
-test "$enable_opendocument" == "auto" && PLUGINS="$PLUGINS opendocument"
+test "$enable_opendocument" = "auto" && PLUGINS="$PLUGINS opendocument"
 
 OPENDOCUMENT_CFLAGS="$OPENDOCUMENT_CFLAGS "'${PLUGIN_CFLAGS}'
 OPENDOCUMENT_LIBS="$OPENDOCUMENT_LIBS "'${PLUGIN_LIBS} -lz'
 
-if test "$enable_opendocument_builtin" == "yes"; then
+if test "$enable_opendocument_builtin" = "yes"; then
 	OPENDOCUMENT_CFLAGS="$OPENDOCUMENT_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27727,12 +27727,12 @@
 
 if test "$enable_google" != ""; then
 
-test "$enable_google" == "auto" && PLUGINS="$PLUGINS google"
+test "$enable_google" = "auto" && PLUGINS="$PLUGINS google"
 
 GOOGLE_CFLAGS="$GOOGLE_CFLAGS "'${PLUGIN_CFLAGS}'
 GOOGLE_LIBS="$GOOGLE_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_google_builtin" == "yes"; then
+if test "$enable_google_builtin" = "yes"; then
 	GOOGLE_CFLAGS="$GOOGLE_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27758,15 +27758,15 @@
 
 else
 
-	test "$enable_sdw" == "auto" && { $as_echo "$as_me:$LINENO: WARNING: sdw plugin: dependencies not satisfied - $sdw_pkgs" >&5
+	test "$enable_sdw" = "auto" && { $as_echo "$as_me:$LINENO: WARNING: sdw plugin: dependencies not satisfied - $sdw_pkgs" >&5
 $as_echo "$as_me: WARNING: sdw plugin: dependencies not satisfied - $sdw_pkgs" >&2;}
 
 fi
 
 fi
 
-if test "$enable_sdw" == "yes" || \
-   test "$sdw_deps" == "yes"; then
+if test "$enable_sdw" = "yes" || \
+   test "$sdw_deps" = "yes"; then
 
 
 pkg_failed=no
@@ -27878,12 +27878,12 @@
 	:
 fi
 
-test "$enable_sdw" == "auto" && PLUGINS="$PLUGINS sdw"
+test "$enable_sdw" = "auto" && PLUGINS="$PLUGINS sdw"
 
 SDW_CFLAGS="$SDW_CFLAGS "'${PLUGIN_CFLAGS}'
 SDW_LIBS="$SDW_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_sdw_builtin" == "yes"; then
+if test "$enable_sdw_builtin" = "yes"; then
 	SDW_CFLAGS="$SDW_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27898,12 +27898,12 @@
 
 if test "$enable_presentation" != ""; then
 
-test "$enable_presentation" == "auto" && PLUGINS="$PLUGINS presentation"
+test "$enable_presentation" = "auto" && PLUGINS="$PLUGINS presentation"
 
 PRESENTATION_CFLAGS="$PRESENTATION_CFLAGS "'${PLUGIN_CFLAGS}'
 PRESENTATION_LIBS="$PRESENTATION_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_presentation_builtin" == "yes"; then
+if test "$enable_presentation_builtin" = "yes"; then
 	PRESENTATION_CFLAGS="$PRESENTATION_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -27918,12 +27918,12 @@
 
 if test "$enable_urldict" != ""; then
 
-test "$enable_urldict" == "auto" && PLUGINS="$PLUGINS urldict"
+test "$enable_urldict" = "auto" && PLUGINS="$PLUGINS urldict"
 
 URLDICT_CFLAGS="$URLDICT_CFLAGS "'${PLUGIN_CFLAGS}'
 URLDICT_LIBS="$URLDICT_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_urldict_builtin" == "yes"; then
+if test "$enable_urldict_builtin" = "yes"; then
 	URLDICT_CFLAGS="$URLDICT_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -28032,8 +28032,8 @@
 
 if test "$enable_psion" != ""; then
 
-	if test "$psiconvconfig" == ""; then
-		if test "$enable_psion" == "yes"; then
+	if test "$psiconvconfig" = ""; then
+		if test "$enable_psion" = "yes"; then
 		  { { $as_echo "$as_me:$LINENO: error: psiconv plugin: program psiconv-config not found in path" >&5
 $as_echo "$as_me: error: psiconv plugin: program psiconv-config not found in path" >&2;}
    { (exit 1); exit 1; }; }
@@ -28062,10 +28062,10 @@
 	fi
 fi
 
-if test "$enable_psion" == "yes" || \
-   test "$psion_deps" == "yes"; then
+if test "$enable_psion" = "yes" || \
+   test "$psion_deps" = "yes"; then
 
-if test "$enable_psion_builtin" == "yes"; then
+if test "$enable_psion_builtin" = "yes"; then
 { { $as_echo "$as_me:$LINENO: error: psion plugin: static linking not supported" >&5
 $as_echo "$as_me: error: psion plugin: static linking not supported" >&2;}
    { (exit 1); exit 1; }; }
@@ -28073,7 +28073,7 @@
 
 { $as_echo "$as_me:$LINENO: checking for psiconv >= ${psiconv_major_req}.${psiconv_minor_req}.${psiconv_micro_req}" >&5
 $as_echo_n "checking for psiconv >= ${psiconv_major_req}.${psiconv_minor_req}.${psiconv_micro_req}... " >&6; }
-if test "$psion_deps" == "yes"; then
+if test "$psion_deps" = "yes"; then
 	{ $as_echo "$as_me:$LINENO: result: version ${psiconv_major_found}.${psiconv_minor_found}.${psiconv_micro_found} (ok)" >&5
 $as_echo "version ${psiconv_major_found}.${psiconv_minor_found}.${psiconv_micro_found} (ok)" >&6; }
 	PSION_CFLAGS=`$psiconvconfig --cflags`
@@ -28084,7 +28084,7 @@
    { (exit 1); exit 1; }; }
 fi
 
-test "$enable_psion" == "auto" && PLUGINS="$PLUGINS psion"
+test "$enable_psion" = "auto" && PLUGINS="$PLUGINS psion"
 
 PSION_CFLAGS="$PSION_CFLAGS $PNG_CFLAGS "'${PLUGIN_CFLAGS}'
 PSION_LIBS="$PSION_LIBS $PNG_LIBS -lgsf-1 "'${PLUGIN_LIBS}'
@@ -28100,12 +28100,12 @@
 
 if test "$enable_hrtext" != ""; then
 
-test "$enable_hrtext" == "auto" && PLUGINS="$PLUGINS hrtext"
+test "$enable_hrtext" = "auto" && PLUGINS="$PLUGINS hrtext"
 
 HRTEXT_CFLAGS="$HRTEXT_CFLAGS "'${PLUGIN_CFLAGS}'
 HRTEXT_LIBS="$HRTEXT_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_hrtext_builtin" == "yes"; then
+if test "$enable_hrtext_builtin" = "yes"; then
 	HRTEXT_CFLAGS="$HRTEXT_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
@@ -28120,12 +28120,12 @@
 
 if test "$enable_mif" != ""; then
 
-test "$enable_mif" == "auto" && PLUGINS="$PLUGINS mif"
+test "$enable_mif" = "auto" && PLUGINS="$PLUGINS mif"
 
 MIF_CFLAGS="$MIF_CFLAGS "'${PLUGIN_CFLAGS}'
 MIF_LIBS="$MIF_LIBS "'${PLUGIN_LIBS}'
 
-if test "$enable_mif_builtin" == "yes"; then
+if test "$enable_mif_builtin" = "yes"; then
 	MIF_CFLAGS="$MIF_CFLAGS -DABI_PLUGIN_BUILTIN"
 fi
 
